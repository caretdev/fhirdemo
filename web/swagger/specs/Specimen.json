{
 "info": {
  "description": "Sample for analysis",
  "title": "FHIR R4 Specimen Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "Specimen": {
    "description": "Sample for analysis",
    "type": "object",
    "properties": {
     "accessionIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Identifier assigned by the lab"
     },
     "collection": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Specimen.collection"
       }
      ],
      "description": "Collection details"
     },
     "condition": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "State of the specimen"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "container": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Specimen.container"
      },
      "description": "Direct container of specimen (tube/slide, etc.)"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "External Identifier"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "note": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Annotation"
      },
      "description": "Comments"
     },
     "parent": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Specimen from which this specimen originated"
     },
     "processing": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Specimen.processing"
      },
      "description": "Processing and processing step details"
     },
     "receivedTime": {
      "type": "string",
      "description": "The time when specimen was received for processing"
     },
     "request": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Why the specimen was collected"
     },
     "status": {
      "type": "string",
      "description": "available | unavailable | unsatisfactory | entered-in-error"
     },
     "subject": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Kind of material that forms the specimen"
     }
    },
    "required": [
     "id"
    ]
   },
   "Specimen.collection": {
    "description": "",
    "type": "object",
    "properties": {
     "bodySite": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Anatomical collection site"
     },
     "collected": {
      "description": ""
     },
     "collectedDateTime": {
      "type": "string",
      "description": ""
     },
     "collectedPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "collector": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who collected the specimen"
     },
     "duration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "How long it took to collect specimen"
     },
     "fastingStatus": {
      "description": ""
     },
     "fastingStatusCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "fastingStatusDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Technique used to perform collection"
     },
     "quantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "The quantity of specimen collected"
     }
    },
    "required": [
     "id"
    ]
   },
   "Specimen.container": {
    "description": "",
    "type": "object",
    "properties": {
     "additive": {
      "description": ""
     },
     "additiveCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "additiveReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "capacity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Container volume or size"
     },
     "description": {
      "type": "string",
      "description": "Textual description of the container"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Id for the container"
     },
     "specimenQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Quantity of specimen within container"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Kind of container directly associated with specimen"
     }
    },
    "required": [
     "id"
    ]
   },
   "Specimen.processing": {
    "description": "",
    "type": "object",
    "properties": {
     "additive": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Material used in the processing step"
     },
     "description": {
      "type": "string",
      "description": "Textual description of procedure"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "procedure": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Indicates the treatment step  applied to the specimen"
     },
     "time": {
      "description": ""
     },
     "timeDateTime": {
      "type": "string",
      "description": ""
     },
     "timePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "SpecimenDefinition": {
    "description": "Kind of specimen",
    "type": "object",
    "properties": {
     "collection": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Specimen collection procedure"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Business identifier of a kind of specimen"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "patientPreparation": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Patient preparation for collection"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     },
     "timeAspect": {
      "type": "string",
      "description": "Time aspect for collection"
     },
     "typeCollected": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Kind of material to collect"
     },
     "typeTested": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/SpecimenDefinition.typeTested"
      },
      "description": "Specimen in container intended for testing by lab"
     }
    },
    "required": [
     "id"
    ]
   },
   "SpecimenDefinition.typeTested": {
    "description": "",
    "type": "object",
    "properties": {
     "container": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SpecimenDefinition.typeTested.container"
       }
      ],
      "description": "The specimen's container"
     },
     "handling": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/SpecimenDefinition.typeTested.handling"
      },
      "description": "Specimen handling before testing"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "isDerived": {
      "type": "boolean",
      "description": "Primary or secondary specimen"
     },
     "preference": {
      "type": "string",
      "description": "preferred | alternate"
     },
     "rejectionCriterion": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Rejection criterion"
     },
     "requirement": {
      "type": "string",
      "description": "Specimen requirements"
     },
     "retentionTime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "Specimen retention time"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Type of intended specimen"
     }
    },
    "required": [
     "id"
    ]
   },
   "SpecimenDefinition.typeTested.container": {
    "description": "",
    "type": "object",
    "properties": {
     "additive": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/SpecimenDefinition.typeTested.container.additive"
      },
      "description": "Additive associated with container"
     },
     "cap": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Color of container cap"
     },
     "capacity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Container capacity"
     },
     "description": {
      "type": "string",
      "description": "Container description"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "material": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Container material"
     },
     "minimumVolume": {
      "description": ""
     },
     "minimumVolumeQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "minimumVolumeString": {
      "type": "string",
      "description": ""
     },
     "preparation": {
      "type": "string",
      "description": "Specimen container preparation"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Kind of container associated with the kind of specimen"
     }
    },
    "required": [
     "id"
    ]
   },
   "SpecimenDefinition.typeTested.container.additive": {
    "description": "",
    "type": "object",
    "properties": {
     "additive": {
      "description": ""
     },
     "additiveCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "additiveReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     }
    },
    "required": [
     "id"
    ]
   },
   "SpecimenDefinition.typeTested.handling": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "instruction": {
      "type": "string",
      "description": "Preservation instruction"
     },
     "maxDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": "Maximum preservation time"
     },
     "temperatureQualifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Temperature qualifier"
     },
     "temperatureRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": "Temperature range"
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/Specimen": {
   "post": {
    "tags": [
     "Specimen"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Specimen"
       },
       "examples": {
        "specimen-example-isolate.json": {
         "value": {
          "resourceType": "Specimen",
          "id": "isolate",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: isolate</p><p><b>contained</b>: </p><p><b>accessionIdentifier</b>: X352356-ISO1</p><p><b>status</b>: available</p><p><b>type</b>: Bacterial isolate specimen <span>(Details : {SNOMED CT code '429951000124103' = 'Bacterial isolate specimen (specimen)', given as 'Bacterial isolate specimen'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>receivedTime</b>: 18/08/2015 7:03:00 AM</p><p><b>parent</b>: id: stool; X352356; status: unavailable; Stool specimen <span>(Details : {SNOMED CT code '119339001' = 'Stool specimen', given as 'Stool specimen'})</span>; receivedTime: 16/08/2015 7:03:00 AM</p><h3>Collections</h3><table><tr><td>-</td><td><b>Collector</b></td><td><b>Collected[x]</b></td><td><b>Method</b></td></tr><tr><td>*</td><td><a>Practitioner/f202</a></td><td>16/08/2015 7:03:00 AM</td><td>Plates, Blood Agar <span>(Details : {http://terminology.hl7.org/CodeSystem/v2-0488 code 'BAP' = 'Plates, Blood Agar)</span></td></tr></table><p><b>note</b>: Patient dropped off specimen</p></div>"
          },
          "contained": [
           {
            "resourceType": "Specimen",
            "id": "stool",
            "accessionIdentifier": {
             "system": "http://lab.acme.org/specimens/2015",
             "value": "X352356"
            },
            "status": "unavailable",
            "type": {
             "coding": [
              {
               "system": "http://snomed.info/sct",
               "code": "119339001",
               "display": "Stool specimen"
              }
             ]
            },
            "subject": {
             "reference": "Patient/example"
            },
            "receivedTime": "2015-08-16T07:03:00Z",
            "collection": {
             "collector": {
              "display": "Patient"
             },
             "collectedDateTime": "2011-08-16T06:15:00Z",
             "method": {
              "coding": [
               {
                "system": "http://terminology.hl7.org/CodeSystem/v2-0488",
                "code": "LNV"
               }
              ]
             }
            }
           }
          ],
          "accessionIdentifier": {
           "system": "http://lab.acme.org/specimens/2011",
           "value": "X352356-ISO1"
          },
          "status": "available",
          "type": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "429951000124103",
             "display": "Bacterial isolate specimen"
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "receivedTime": "2015-08-18T07:03:00Z",
          "parent": [
           {
            "reference": "#stool"
           }
          ],
          "collection": {
           "collector": {
            "reference": "Practitioner/f202"
           },
           "collectedDateTime": "2015-08-16T07:03:00Z",
           "method": {
            "coding": [
             {
              "system": "http://terminology.hl7.org/CodeSystem/v2-0488",
              "code": "BAP"
             }
            ]
           }
          },
          "note": [
           {
            "text": "Patient dropped off specimen"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "specimen-example-pooled-serum.json": {
         "value": {
          "resourceType": "Specimen",
          "id": "pooled-serum",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: pooled-serum</p><p><b>accessionIdentifier</b>: 20171120-1234</p><p><b>type</b>: Pooled serum sample <span>(Details : {https://vetmed.iastate.edu/vdl code 'Serum sample, pooled' = 'Serum sample, pooled', given as 'Serum sample, pooled'})</span></p><p><b>subject</b>: <a>Group/herd1</a></p><h3>Collections</h3><table><tr><td>-</td><td><b>Collector</b></td><td><b>Collected[x]</b></td></tr><tr><td>*</td><td>James Herriot, FRCVS</td><td>14/11/2017</td></tr></table><h3>Containers</h3><table><tr><td>-</td><td><b>Type</b></td></tr><tr><td>*</td><td>Red Top Blood Collection Tube <span>(Details : {https://vetmed.iastate.edu/vdl code 'RTT' = 'RTT', given as 'Red Top Tube'})</span></td></tr></table><p><b>note</b>: Pooled serum sample from 30 individuals</p></div>"
          },
          "accessionIdentifier": {
           "system": "https://vetmed.iastate.edu/vdl",
           "value": "20171120-1234"
          },
          "type": {
           "coding": [
            {
             "system": "https://vetmed.iastate.edu/vdl",
             "code": "Serum sample, pooled",
             "display": "Serum sample, pooled"
            }
           ],
           "text": "Pooled serum sample"
          },
          "subject": {
           "reference": "Group/herd1"
          },
          "collection": {
           "collector": {
            "display": "James Herriot, FRCVS"
           },
           "collectedDateTime": "2017-11-14"
          },
          "container": [
           {
            "type": {
             "coding": [
              {
               "system": "https://vetmed.iastate.edu/vdl",
               "code": "RTT",
               "display": "Red Top Tube"
              }
             ],
             "text": "Red Top Blood Collection Tube"
            }
           }
          ],
          "note": [
           {
            "text": "Pooled serum sample from 30 individuals"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "specimen-example-serum.json": {
         "value": {
          "resourceType": "Specimen",
          "id": "sst",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: sst</p><p><b>accessionIdentifier</b>: 20150816-00124</p><p><b>type</b>: Serum sample <span>(Details : {SNOMED CT code '119364003' = 'Serum specimen', given as 'Serum sample'})</span></p><p><b>subject</b>: <a>Patient/pat2</a></p><p><b>request</b>: <a>ServiceRequest/ft4</a></p><h3>Collections</h3><table><tr><td>-</td><td><b>Collector</b></td><td><b>Collected[x]</b></td></tr><tr><td>*</td><td><a>Practitioner/f202</a></td><td>16/08/2015 6:40:17 AM</td></tr></table><h3>Containers</h3><table><tr><td>-</td><td><b>Type</b></td></tr><tr><td>*</td><td>Serum Separator Tube <span>(Details : {http://acme.com/labs code 'SST' = 'SST', given as 'Serum Separator Tube'})</span></td></tr></table></div>"
          },
          "accessionIdentifier": {
           "system": "http://acme.com/labs/accession-ids",
           "value": "20150816-00124"
          },
          "type": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "119364003",
             "display": "Serum sample"
            }
           ]
          },
          "subject": {
           "reference": "Patient/pat2"
          },
          "request": [
           {
            "reference": "ServiceRequest/ft4"
           }
          ],
          "collection": {
           "collector": {
            "reference": "Practitioner/f202"
           },
           "collectedDateTime": "2015-08-16T06:40:17Z"
          },
          "container": [
           {
            "type": {
             "coding": [
              {
               "system": "http://acme.com/labs",
               "code": "SST",
               "display": "Serum Separator Tube"
              }
             ]
            }
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "specimen-example-urine.json": {
         "value": {
          "resourceType": "Specimen",
          "id": "vma-urine",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: vma-urine</p><p><b>accessionIdentifier</b>: X352356</p><p><b>status</b>: available</p><p><b>type</b>: Urine, Random <span>(Details : {http://terminology.hl7.org/CodeSystem/v2-0487 code 'RANDU' = 'Urine, Random', given as 'Urine, Random'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>receivedTime</b>: 18/08/2015 7:03:00 AM</p><h3>Collections</h3><table><tr><td>-</td><td><b>Collector</b></td><td><b>Collected[x]</b></td></tr><tr><td>*</td><td><a>Practitioner/f202</a></td><td>18/08/2015 7:03:00 AM</td></tr></table><h3>Processings</h3><table><tr><td>-</td><td><b>Description</b></td><td><b>Procedure</b></td><td><b>Additive</b></td><td><b>Time[x]</b></td></tr><tr><td>*</td><td>Acidify to pH &lt; 3.0 with 6 N HCl.</td><td>Acidification <span>(Details : {http://terminology.hl7.org/CodeSystem/v2-0373 code 'ACID' = 'Acidification)</span></td><td>6 N HCl</td><td>18/08/2015 8:10:00 AM</td></tr></table><h3>Containers</h3><table><tr><td>-</td><td><b>Type</b></td><td><b>Capacity</b></td><td><b>SpecimenQuantity</b></td></tr><tr><td>*</td><td>Non-sterile specimen container <span>(Details )</span></td><td>50 mls</td><td>10 mls</td></tr></table></div>"
          },
          "accessionIdentifier": {
           "system": "http://lab.acme.org/specimens/2015",
           "value": "X352356"
          },
          "status": "available",
          "type": {
           "coding": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v2-0487",
             "code": "RANDU",
             "display": "Urine, Random"
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "receivedTime": "2015-08-18T07:03:00Z",
          "collection": {
           "collector": {
            "reference": "Practitioner/f202"
           },
           "collectedDateTime": "2015-08-18T07:03:00Z"
          },
          "processing": [
           {
            "description": "Acidify to pH < 3.0 with 6 N HCl.",
            "procedure": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/v2-0373",
               "code": "ACID"
              }
             ]
            },
            "additive": [
             {
              "display": "6 N HCl"
             }
            ],
            "timeDateTime": "2015-08-18T08:10:00Z"
           }
          ],
          "container": [
           {
            "type": {
             "text": "Non-sterile specimen container"
            },
            "capacity": {
             "value": 50,
             "unit": "mls"
            },
            "specimenQuantity": {
             "value": 10,
             "unit": "mls"
            }
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "specimen-example.json": {
         "value": {
          "resourceType": "Specimen",
          "id": "101",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: 101</p><p><b>contained</b>: </p><p><b>identifier</b>: 23234352356</p><p><b>accessionIdentifier</b>: X352356</p><p><b>status</b>: available</p><p><b>type</b>: Venous blood specimen <span>(Details : {SNOMED CT code '122555007' = 'Venous blood specimen', given as 'Venous blood specimen'})</span></p><p><b>subject</b>: <a>Peter Patient</a></p><p><b>receivedTime</b>: 04/03/2011 7:03:00 AM</p><p><b>request</b>: <a>ServiceRequest/example</a></p><h3>Collections</h3><table><tr><td>-</td><td><b>Collector</b></td><td><b>Collected[x]</b></td><td><b>Quantity</b></td><td><b>Method</b></td><td><b>BodySite</b></td></tr><tr><td>*</td><td><a>Practitioner/example</a></td><td>30/05/2011 6:15:00 AM</td><td>6 mL</td><td>Line, Venous <span>(Details : {http://terminology.hl7.org/CodeSystem/v2-0488 code 'LNV' = 'Line, Venous)</span></td><td>Right median cubital vein <span>(Details : {SNOMED CT code '49852007' = 'Median cubital vein', given as 'Structure of median cubital vein (body structure)'})</span></td></tr></table><h3>Containers</h3><table><tr><td>-</td><td><b>Identifier</b></td><td><b>Description</b></td><td><b>Type</b></td><td><b>Capacity</b></td><td><b>SpecimenQuantity</b></td><td><b>Additive[x]</b></td></tr><tr><td>*</td><td>48736-15394-75465</td><td>Green Gel tube</td><td>Vacutainer <span>(Details )</span></td><td>10 mL</td><td>6 mL</td><td>id: hep; Lithium/Li Heparin <span>(Details : {http://terminology.hl7.org/CodeSystem/v3-EntityCode code 'HEPL' = 'Lithium/Li Heparin)</span></td></tr></table><p><b>note</b>: Specimen is grossly lipemic</p></div>"
          },
          "contained": [
           {
            "resourceType": "Substance",
            "id": "hep",
            "code": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/v3-EntityCode",
               "code": "HEPL"
              }
             ]
            }
           }
          ],
          "identifier": [
           {
            "system": "http://ehr.acme.org/identifiers/collections",
            "value": "23234352356"
           }
          ],
          "accessionIdentifier": {
           "system": "http://lab.acme.org/specimens/2011",
           "value": "X352356"
          },
          "status": "available",
          "type": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "122555007",
             "display": "Venous blood specimen"
            }
           ]
          },
          "subject": {
           "reference": "Patient/example",
           "display": "Peter Patient"
          },
          "receivedTime": "2011-03-04T07:03:00Z",
          "request": [
           {
            "reference": "ServiceRequest/example"
           }
          ],
          "collection": {
           "collector": {
            "reference": "Practitioner/example"
           },
           "collectedDateTime": "2011-05-30T06:15:00Z",
           "quantity": {
            "value": 6,
            "unit": "mL"
           },
           "method": {
            "coding": [
             {
              "system": "http://terminology.hl7.org/CodeSystem/v2-0488",
              "code": "LNV"
             }
            ]
           },
           "bodySite": {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "49852007",
              "display": "Structure of median cubital vein (body structure)"
             }
            ],
            "text": "Right median cubital vein"
           }
          },
          "container": [
           {
            "identifier": [
             {
              "value": "48736-15394-75465"
             }
            ],
            "description": "Green Gel tube",
            "type": {
             "text": "Vacutainer"
            },
            "capacity": {
             "value": 10,
             "unit": "mL"
            },
            "specimenQuantity": {
             "value": 6,
             "unit": "mL"
            },
            "additiveReference": {
             "reference": "#hep"
            }
           }
          ],
          "note": [
           {
            "text": "Specimen is grossly lipemic"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "Specimen"
    ],
    "parameters": [
     {
      "name": "accession",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The accession number associated with the specimen"
     },
     {
      "name": "bodysite",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The body site studied"
     },
     {
      "name": "collected",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "The date the specimen was collected"
     },
     {
      "name": "collector",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Who collected the specimen"
     },
     {
      "name": "container",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The kind of specimen container"
     },
     {
      "name": "container-id",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The unique identifier associated with the specimen container"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "parent",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The parent DeviceDefinition resource"
     },
     {
      "name": "patient",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "status",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "active | inactive | entered-in-error | on-hold | unknown"
     },
     {
      "name": "subject",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "E.g. patient, expense, depreciation"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Specimen"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Specimen/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "Specimen"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Specimen"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Specimen"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Specimen"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Specimen"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/Specimen/{id}/_history": {
   "get": {
    "tags": [
     "Specimen"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Specimen"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Specimen/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "Specimen"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Specimen"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "Specimen"
  }
 ]
}