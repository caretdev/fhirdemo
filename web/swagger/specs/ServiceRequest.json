{
 "info": {
  "description": "A request for a service to be performed",
  "title": "FHIR R4 ServiceRequest Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "ServiceRequest": {
    "description": "A request for a service to be performed",
    "type": "object",
    "properties": {
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "authoredOn": {
      "type": "string",
      "description": "Date request signed"
     },
     "basedOn": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "What request fulfills"
     },
     "bodySite": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Location on Body"
     },
     "category": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Classification of service"
     },
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "What is being requested/ordered"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "doNotPerform": {
      "type": "boolean",
      "description": "True if service/procedure should not be performed"
     },
     "encounter": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Encounter in which the request was created"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Identifiers assigned to this order"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "instantiatesCanonical": {
      "type": "string",
      "description": "Instantiates FHIR protocol or definition"
     },
     "instantiatesUri": {
      "type": "string",
      "description": "Instantiates external protocol or definition"
     },
     "insurance": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Associated insurance coverage"
     },
     "intent": {
      "type": "string",
      "description": "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "locationCode": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Requested location"
     },
     "locationReference": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Requested location"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "note": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Annotation"
      },
      "description": "Comments"
     },
     "occurrence": {
      "description": ""
     },
     "occurrenceDateTime": {
      "type": "string",
      "description": ""
     },
     "occurrencePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "occurrenceTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "orderDetail": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Additional order information"
     },
     "patientInstruction": {
      "type": "string",
      "description": "Patient or consumer-oriented instructions"
     },
     "performer": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Requested performer"
     },
     "performerType": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Performer role"
     },
     "priority": {
      "type": "string",
      "description": "routine | urgent | asap | stat"
     },
     "quantity": {
      "description": ""
     },
     "quantityQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "quantityRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "quantityRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "reasonCode": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Explanation/Justification for procedure or service"
     },
     "reasonReference": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Explanation/Justification for service or service"
     },
     "relevantHistory": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Request provenance"
     },
     "replaces": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "What request replaces"
     },
     "requester": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who/what is requesting service"
     },
     "requisition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Composite Request ID"
     },
     "specimen": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Procedure Samples"
     },
     "status": {
      "type": "string",
      "description": "draft | active | on-hold | revoked | completed | entered-in-error | unknown"
     },
     "subject": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Individual or Entity the service is ordered for"
     },
     "supportingInfo": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Additional clinical information"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/ServiceRequest": {
   "post": {
    "tags": [
     "ServiceRequest"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/ServiceRequest"
       },
       "examples": {
        "servicerequest-example-ambulation.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "ambulation",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: ambulation</p><p><b>identifier</b>: 45678</p><p><b>basedOn</b>: <a>Maternity care plan</a></p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Ambulation <span>(Details : {SNOMED CT code '62013009' = 'Ambulating patient', given as 'Ambulating patient (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 05/03/2017</p><p><b>requester</b>: <a>Dr. Beverly Crusher</a></p><p><b>reasonReference</b>: <a>Blood Pressure</a></p></div>"
          },
          "identifier": [
           {
            "value": "45678"
           }
          ],
          "basedOn": [
           {
            "reference": "CarePlan/preg",
            "display": "Maternity care plan"
           }
          ],
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "62013009",
             "display": "Ambulating patient (procedure)"
            }
           ],
           "text": "Ambulation"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2017-03-05",
          "requester": {
           "reference": "Practitioner/3ad0687e-f477-468c-afd5-fcc2bf897809",
           "display": "Dr. Beverly Crusher"
          },
          "reasonReference": [
           {
            "reference": "Observation/blood-pressure",
            "display": "Blood Pressure"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-appendectomy.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "appendectomy-narrative",
          "text": {
           "status": "additional",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t<p>Date: 2013-03-16</p>\n\t\t\t<p>Patient:: Paula Patient</p>\n\t\t\t<p>Ordered by: Angela Care, MD</p>\n\t\t\t<p>Procedure: Routine Appendectomy</p>\n\t\t\t<p>Surgeon: Dr Cecil Surgeon</p>\n\t\t</div>"
          },
          "status": "completed",
          "intent": "order",
          "code": {
           "text": "Appendectomy"
          },
          "subject": {
           "display": "Paula Patient"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-colonoscopy-bx.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "colon-biopsy",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: colon-biopsy</p><p><b>identifier</b>: 12345</p><p><b>requisition</b>: req12345</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Biopsy of colon <span>(Details : {SNOMED CT code '76164006' = 'Biopsy of colon', given as 'Biopsy of colon (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 05/03/2017</p><p><b>requester</b>: <a>Dr. Beverly Crusher</a></p><p><b>performer</b>: <a>Dr Adam Careful</a></p></div>"
          },
          "identifier": [
           {
            "value": "12345"
           }
          ],
          "requisition": {
           "system": "http://bumc.org/requisitions",
           "value": "req12345"
          },
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "76164006",
             "display": "Biopsy of colon (procedure)"
            }
           ],
           "text": "Biopsy of colon"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2017-03-05",
          "requester": {
           "reference": "Practitioner/3ad0687e-f477-468c-afd5-fcc2bf897809",
           "display": "Dr. Beverly Crusher"
          },
          "performer": [
           {
            "reference": "Practitioner/example",
            "display": "Dr Adam Careful"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-colonoscopy.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "colonoscopy",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: colonoscopy</p><p><b>identifier</b>: 45678</p><p><b>requisition</b>: req12345</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Colonoscopy <span>(Details : {SNOMED CT code '73761001' = 'Colonoscopy', given as 'Colonoscopy (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 05/03/2017</p><p><b>requester</b>: <a>Dr. Beverly Crusher</a></p><p><b>performer</b>: <a>Dr Adam Careful</a></p></div>"
          },
          "identifier": [
           {
            "value": "45678"
           }
          ],
          "requisition": {
           "system": "http://bumc.org/requisitions",
           "value": "req12345"
          },
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "73761001",
             "display": "Colonoscopy (procedure)"
            }
           ],
           "text": "Colonoscopy"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2017-03-05",
          "requester": {
           "reference": "Practitioner/3ad0687e-f477-468c-afd5-fcc2bf897809",
           "display": "Dr. Beverly Crusher"
          },
          "performer": [
           {
            "reference": "Practitioner/example",
            "display": "Dr Adam Careful"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-di.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "di",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: di</p><p><b>status</b>: active</p><p><b>intent</b>: original-order</p><p><b>code</b>: Chest CT <span>(Details : {LOINC code '24627-2' = 'Chest CT)</span></p><p><b>subject</b>: <a>Patient/dicom</a></p><p><b>occurrence</b>: 08/05/2013 9:33:27 AM</p><p><b>requester</b>: <a>Dr. Adam Careful</a></p><p><b>reasonCode</b>: Check for metastatic disease <span>(Details )</span></p></div>"
          },
          "status": "active",
          "intent": "original-order",
          "code": {
           "coding": [
            {
             "system": "http://loinc.org",
             "code": "24627-2"
            }
           ],
           "text": "Chest CT"
          },
          "subject": {
           "reference": "Patient/dicom"
          },
          "occurrenceDateTime": "2013-05-08T09:33:27+07:00",
          "requester": {
           "reference": "Practitioner/example",
           "display": "Dr. Adam Careful"
          },
          "reasonCode": [
           {
            "text": "Check for metastatic disease"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-edu.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "education",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: education</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>category</b>: Education <span>(Details : {SNOMED CT code '311401005' = 'Patient education', given as 'Patient education (procedure)'})</span></p><p><b>code</b>: Health education - breast examination <span>(Details : {SNOMED CT code '48023004' = 'Breast self-examination technique education', given as 'Breast self-examination technique education (procedure)'})</span></p><p><b>subject</b>: Jane Doe</p><p><b>occurrence</b>: 16/08/2014</p><p><b>authoredOn</b>: 16/08/2016</p><p><b>requester</b>: Angela Care, MD</p><p><b>performer</b>: Pamela Educator, RN</p><p><b>reasonCode</b>: early detection of breast mass <span>(Details )</span></p></div>"
          },
          "status": "completed",
          "intent": "order",
          "category": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "311401005",
              "display": "Patient education (procedure)"
             }
            ],
            "text": "Education"
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "48023004",
             "display": "Breast self-examination technique education (procedure)"
            }
           ],
           "text": "Health education - breast examination"
          },
          "subject": {
           "display": "Jane Doe"
          },
          "occurrenceDateTime": "2014-08-16",
          "authoredOn": "2016-08-16",
          "requester": {
           "display": "Angela Care, MD"
          },
          "performer": [
           {
            "display": "Pamela Educator, RN"
           }
          ],
          "reasonCode": [
           {
            "text": "early detection of breast mass"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-ft4.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "ft4",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: ft4</p><p><b>status</b>: active</p><p><b>intent</b>: reflex-order</p><p><b>code</b>: Free T4 <span>(Details : {LOINC code '3024-7' = 'Thyroxine (T4) free [Mass/volume] in Serum or Plasma', given as 'Thyroxine (T4) free [Mass/​volume] in Serum or Plasma'})</span></p><p><b>subject</b>: <a>Patient/pat2</a></p><p><b>occurrence</b>: 27/08/2015 9:33:27 AM</p><p><b>requester</b>: <a>Practitioner/example</a></p></div>"
          },
          "status": "active",
          "intent": "reflex-order",
          "code": {
           "coding": [
            {
             "system": "http://loinc.org",
             "code": "3024-7",
             "display": "Thyroxine (T4) free [Mass/​volume] in Serum or Plasma"
            }
           ],
           "text": "Free T4"
          },
          "subject": {
           "reference": "Patient/pat2"
          },
          "occurrenceDateTime": "2015-08-27T09:33:27+07:00",
          "requester": {
           "reference": "Practitioner/example"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-implant.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "example-implant",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example-implant</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Implant Pacemaker <span>(Details : {SNOMED CT code '25267002' = 'Insertion of intracardiac pacemaker', given as 'Insertion of intracardiac pacemaker (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 30/03/2015</p><p><b>requester</b>: <a>Dr. Beverly Crusher</a></p><p><b>performer</b>: <a>Dr Cecil Surgeon</a></p><p><b>reasonCode</b>: Bradycardia <span>(Details )</span></p></div>"
          },
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "25267002",
             "display": "Insertion of intracardiac pacemaker (procedure)"
            }
           ],
           "text": "Implant Pacemaker"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2015-03-30",
          "requester": {
           "reference": "Practitioner/3ad0687e-f477-468c-afd5-fcc2bf897809",
           "display": "Dr. Beverly Crusher"
          },
          "performer": [
           {
            "reference": "Practitioner/example",
            "display": "Dr Cecil Surgeon"
           }
          ],
          "reasonCode": [
           {
            "text": "Bradycardia"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-lipid.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "lipid",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: lipid</p><p><b>contained</b>: , </p><p><b>identifier</b>: Placer = 2345234234234</p><p><b>status</b>: active</p><p><b>intent</b>: original-order</p><p><b>code</b>: Lipid Panel <span>(Details : {http://acme.org/tests code 'LIPID' = 'LIPID)</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>encounter</b>: <a>Encounter/example</a></p><p><b>occurrence</b>: 02/05/2013 4:16:00 PM</p><p><b>requester</b>: <a>Practitioner/example</a></p><p><b>performer</b>: <a>Practitioner/f202</a></p><p><b>reasonCode</b>: Fam hx-ischem heart dis <span>(Details : {ICD-9 code 'V173' = 'V173', given as 'Fam hx-ischem heart dis'})</span></p><p><b>supportingInfo</b>: Fasting status. Generated Summary: id: fasting; status: final; Fasting status - Reported <span>(Details : {LOINC code '49541-6' = 'Fasting status - Reported', given as 'Fasting status - Reported'})</span>; Yes <span>(Details : {http://terminology.hl7.org/CodeSystem/v2-0136 code 'Y' = 'Yes', given as 'Yes'})</span></p><p><b>specimen</b>: Serum specimen. Generated Summary: id: serum; 20150107-0012; Serum sample <span>(Details : {SNOMED CT code '119364003' = 'Serum specimen', given as 'Serum sample'})</span></p><p><b>note</b>: patient is afraid of needles</p></div>"
          },
          "contained": [
           {
            "resourceType": "Observation",
            "id": "fasting",
            "status": "final",
            "code": {
             "coding": [
              {
               "system": "http://loinc.org",
               "code": "49541-6",
               "display": "Fasting status - Reported"
              }
             ]
            },
            "subject": {
             "reference": "Patient/example"
            },
            "valueCodeableConcept": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/v2-0136",
               "code": "Y",
               "display": "Yes"
              }
             ]
            }
           },
           {
            "resourceType": "Specimen",
            "id": "serum",
            "identifier": [
             {
              "system": "http://acme.org/specimens",
              "value": "20150107-0012"
             }
            ],
            "type": {
             "coding": [
              {
               "system": "http://snomed.info/sct",
               "code": "119364003",
               "display": "Serum sample"
              }
             ]
            },
            "subject": {
             "reference": "Patient/example"
            },
            "collection": {
             "collectedDateTime": "2015-08-16T06:40:17Z"
            }
           }
          ],
          "identifier": [
           {
            "type": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
               "code": "PLAC"
              }
             ],
             "text": "Placer"
            },
            "system": "urn:oid:1.3.4.5.6.7",
            "value": "2345234234234"
           }
          ],
          "status": "active",
          "intent": "original-order",
          "code": {
           "coding": [
            {
             "system": "http://acme.org/tests",
             "code": "LIPID"
            }
           ],
           "text": "Lipid Panel"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "encounter": {
           "reference": "Encounter/example"
          },
          "occurrenceDateTime": "2013-05-02T16:16:00-07:00",
          "requester": {
           "reference": "Practitioner/example"
          },
          "performer": [
           {
            "reference": "Practitioner/f202"
           }
          ],
          "reasonCode": [
           {
            "coding": [
             {
              "system": "http://hl7.org/fhir/sid/icd-9",
              "code": "V173",
              "display": "Fam hx-ischem heart dis"
             }
            ]
           }
          ],
          "supportingInfo": [
           {
            "reference": "#fasting",
            "display": "Fasting status"
           }
          ],
          "specimen": [
           {
            "reference": "#serum",
            "display": "Serum specimen"
           }
          ],
          "note": [
           {
            "text": "patient is afraid of needles"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-myringotomy.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "myringotomy",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: myringotomy</p><p><b>identifier</b>: ret4421</p><p><b>basedOn</b>: ServiceRequest for Myringotomy and insertion of tympanic ventilation tube</p><p><b>replaces</b>: prior ServiceRequest</p><p><b>requisition</b>: 1234</p><p><b>status</b>: active</p><p><b>intent</b>: order</p><p><b>category</b>: Patient referral to specialist <span>(Details : {SNOMED CT code '103696004' = 'Patient referral to specialist', given as 'Patient referral to specialist'})</span></p><p><b>priority</b>: routine</p><p><b>code</b>: Insertion of grommets <span>(Details : {SNOMED CT code '172676009' = 'Myringotomy and insertion of short-term grommet', given as 'Myringotomy and insertion of tympanic ventilation tube'})</span></p><p><b>subject</b>: <a>Beverly Weaver</a></p><p><b>encounter</b>: Beverly Waver's encounter on 2014-02-14</p><p><b>occurrence</b>: ?? --&gt; 14/03/2014</p><p><b>authoredOn</b>: 14/02/2014</p><p><b>requester</b>: <a>Serena Shrink</a></p><p><b>performerType</b>: ENT <span>(Details : {http://orionhealth.com/fhir/apps/specialties code 'ent' = 'ent', given as 'ENT'})</span></p><p><b>performer</b>: <a>Dr Dave</a></p><p><b>reasonCode</b>: For consideration of Grommets <span>(Details )</span></p><p><b>note</b>: In the past 2 years Beverly has had 6 instances of rt-sided Otitis media. She is     falling behind her peers at school, and displaying some learning difficulties.</p></div>"
          },
          "identifier": [
           {
            "system": "http://orionhealth.com/fhir/apps/referralids",
            "value": "ret4421"
           }
          ],
          "basedOn": [
           {
            "display": "ServiceRequest for Myringotomy and insertion of tympanic ventilation tube"
           }
          ],
          "replaces": [
           {
            "display": "prior ServiceRequest"
           }
          ],
          "requisition": {
           "value": "1234"
          },
          "status": "active",
          "intent": "order",
          "category": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "103696004",
              "display": "Patient referral to specialist"
             }
            ]
           }
          ],
          "priority": "routine",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "172676009",
             "display": "Myringotomy and insertion of tympanic ventilation tube"
            }
           ],
           "text": "Insertion of grommets"
          },
          "subject": {
           "reference": "https://fhir.orionhealth.com/blaze/fhir/Patient/77662",
           "display": "Beverly Weaver"
          },
          "encounter": {
           "display": "Beverly Waver's encounter on 2014-02-14"
          },
          "occurrencePeriod": {
           "end": "2014-03-14"
          },
          "authoredOn": "2014-02-14",
          "requester": {
           "reference": "https://fhir.orionhealth.com/blaze/fhir/Practitioner/77272",
           "display": "Serena Shrink"
          },
          "performerType": {
           "coding": [
            {
             "system": "http://orionhealth.com/fhir/apps/specialties",
             "code": "ent",
             "display": "ENT"
            }
           ]
          },
          "performer": [
           {
            "reference": "https://fhir.orionhealth.com/blaze/fhir/Practitioner/76597",
            "display": "Dr Dave"
           }
          ],
          "reasonCode": [
           {
            "text": "For consideration of Grommets"
           }
          ],
          "note": [
           {
            "authorString": "Serena Shrink",
            "time": "2014-02-14",
            "text": "In the past 2 years Beverly has had 6 instances of rt-sided Otitis media. She is     falling behind her peers at school, and displaying some learning difficulties."
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-ob.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "ob",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: ob</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>category</b>: OB <span>(Details : {SNOMED CT code '386637004' = 'Obstetric procedure', given as 'Obstetric procedure (procedure)'})</span></p><p><b>code</b>: Vaginal delivery <span>(Details : {SNOMED CT code '22633006' = 'Vaginal delivery, medical personnel present', given as 'Vaginal delivery, medical personnel present (procedure)'})</span></p><p><b>subject</b>: Jane Doe</p><p><b>occurrence</b>: 02/06/2012</p><p><b>requester</b>: Women’s Hospital</p><p><b>performer</b>: Martha Midwife, RNP</p><p><b>reasonCode</b>: term pregnancy, active labor <span>(Details )</span></p></div>"
          },
          "status": "completed",
          "intent": "order",
          "category": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "386637004",
              "display": "Obstetric procedure (procedure)"
             }
            ],
            "text": "OB"
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "22633006",
             "display": "Vaginal delivery, medical personnel present (procedure)"
            }
           ],
           "text": "Vaginal delivery"
          },
          "subject": {
           "display": "Jane Doe"
          },
          "occurrenceDateTime": "2012-06-02",
          "requester": {
           "display": "Women’s Hospital"
          },
          "performer": [
           {
            "display": "Martha Midwife, RNP"
           }
          ],
          "reasonCode": [
           {
            "text": "term pregnancy, active labor"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-pgx.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "example-pgx",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example-pgx</p><p><b>status</b>: active</p><p><b>intent</b>: original-order</p><p><b>code</b>: CYP2D6 gene targeted mutation analysis <span>(Details : {LOINC code '47403-1' = 'CYP2D6 gene mutation analysis in Blood or Tissue by Molecular genetics method Narrative', given as 'CYP2D6 gene targeted mutation analysis'})</span></p><p><b>subject</b>: <a>Patient/899962</a></p><p><b>authoredOn</b>: 10/10/2016 3:00:00 PM</p><p><b>requester</b>: <a>Practitioner/12345</a></p></div>"
          },
          "status": "active",
          "intent": "original-order",
          "code": {
           "coding": [
            {
             "system": "http://loinc.org",
             "code": "47403-1",
             "display": "CYP2D6 gene targeted mutation analysis"
            }
           ]
          },
          "subject": {
           "reference": "Patient/899962"
          },
          "authoredOn": "2016-10-10T15:00:00-07:00",
          "requester": {
           "reference": "Practitioner/12345"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-pt.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "physical-therapy",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: physical-therapy</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>category</b>: Evaluation <span>(Details : {SNOMED CT code '386053000' = 'Patient evaluation procedure', given as 'Evaluation procedure (procedure)'})</span></p><p><b>code</b>: Assessment of passive range of motion <span>(Details : {SNOMED CT code '710830005' = 'Assessment of passive range of motion', given as 'Assessment of passive range of motion (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>occurrence</b>: 27/09/2016</p><p><b>authoredOn</b>: 20/09/2016</p><p><b>requester</b>: Ollie Ortho, MD</p><p><b>performer</b>: Paul Therapist, PT</p><p><b>reasonCode</b>: assessment of mobility limitations due to osteoarthritis <span>(Details )</span></p><p><b>bodySite</b>: Both knees <span>(Details : {SNOMED CT code '36701003' = 'Both knees', given as 'Both knees (body structure)'})</span></p></div>"
          },
          "status": "completed",
          "intent": "order",
          "category": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "386053000",
              "display": "Evaluation procedure (procedure)"
             }
            ],
            "text": "Evaluation"
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "710830005",
             "display": "Assessment of passive range of motion (procedure)"
            }
           ],
           "text": "Assessment of passive range of motion"
          },
          "subject": {
           "reference": "Patient/example"
          },
          "occurrenceDateTime": "2016-09-27",
          "authoredOn": "2016-09-20",
          "requester": {
           "display": "Ollie Ortho, MD"
          },
          "performer": [
           {
            "display": "Paul Therapist, PT"
           }
          ],
          "reasonCode": [
           {
            "text": "assessment of mobility limitations due to osteoarthritis"
           }
          ],
          "bodySite": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "36701003",
              "display": "Both knees (body structure)"
             }
            ],
            "text": "Both knees"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-subrequest.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "subrequest",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: subrequest</p><p><b>basedOn</b>: Original Request</p><p><b>replaces</b>: Previous allergy test</p><p><b>requisition</b>: A13848392</p><p><b>status</b>: active</p><p><b>intent</b>: instance-order</p><p><b>priority</b>: routine</p><p><b>code</b>: Peanut IgG <span>(Details : {LOINC code '35542-0' = 'Peanut IgG Ab [Mass/volume] in Serum)</span></p><p><b>subject</b>: <a>Patient/dicom</a></p><p><b>occurrence</b>: 08/05/2013 9:33:27 AM</p><p><b>requester</b>: <a>Dr. Adam Careful</a></p><p><b>performerType</b>: Nurse <span>(Details : {[not stated] code 'null' = 'null', given as 'Qualified nurse'})</span></p><p><b>reasonCode</b>: Check for Peanut Allergy <span>(Details )</span></p><p><b>bodySite</b>: Right arm <span>(Details : {[not stated] code 'null' = 'null', given as 'Right arm'})</span></p></div>"
          },
          "basedOn": [
           {
            "display": "Original Request"
           }
          ],
          "replaces": [
           {
            "display": "Previous allergy test"
           }
          ],
          "requisition": {
           "value": "A13848392"
          },
          "status": "active",
          "intent": "instance-order",
          "priority": "routine",
          "code": {
           "coding": [
            {
             "system": "http://loinc.org",
             "code": "35542-0"
            }
           ],
           "text": "Peanut IgG"
          },
          "subject": {
           "reference": "Patient/dicom"
          },
          "occurrenceDateTime": "2013-05-08T09:33:27+07:00",
          "requester": {
           "reference": "Practitioner/example",
           "display": "Dr. Adam Careful"
          },
          "performerType": {
           "coding": [
            {
             "display": "Qualified nurse"
            }
           ],
           "text": "Nurse"
          },
          "reasonCode": [
           {
            "text": "Check for Peanut Allergy"
           }
          ],
          "bodySite": [
           {
            "coding": [
             {
              "display": "Right arm"
             }
            ],
            "text": "Right arm"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example-ventilation.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "vent",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: vent</p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Mechanical Ventilation <span>(Details : {SNOMED CT code '40617009' = 'Artificial respiration', given as 'Artificial respiration (procedure)'})</span></p><p><b>orderDetail</b>: IPPB <span>(Details : {SNOMED CT code '243144002' = 'Patient triggered inspiratory assistance', given as 'Patient triggered inspiratory assistance (procedure)'})</span>,  Initial Settings : Sens: -1 cm H20 Pressure 15 cm H2O moderate flow:  Monitor VS every 15 minutes x 4 at the start of mechanical ventilation, then routine for unit OR every 5 hr <span>(Details )</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 20/02/2018</p><p><b>requester</b>: <a>Dr. Beverly Crusher</a></p><p><b>performer</b>: <a>Dr Cecil Surgeon</a></p><p><b>reasonCode</b>: chronic obstructive lung disease (COLD) <span>(Details )</span></p></div>"
          },
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "40617009",
             "display": "Artificial respiration (procedure)"
            }
           ],
           "text": "Mechanical Ventilation"
          },
          "orderDetail": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "243144002",
              "display": "Patient triggered inspiratory assistance (procedure)"
             }
            ],
            "text": "IPPB"
           },
           {
            "text": " Initial Settings : Sens: -1 cm H20 Pressure 15 cm H2O moderate flow:  Monitor VS every 15 minutes x 4 at the start of mechanical ventilation, then routine for unit OR every 5 hr"
           }
          ],
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2018-02-20",
          "requester": {
           "reference": "Practitioner/3ad0687e-f477-468c-afd5-fcc2bf897809",
           "display": "Dr. Beverly Crusher"
          },
          "performer": [
           {
            "reference": "Practitioner/example",
            "display": "Dr Cecil Surgeon"
           }
          ],
          "reasonCode": [
           {
            "text": "chronic obstructive lung disease (COLD)"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "example",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">To be added</div>"
          },
          "status": "completed",
          "intent": "order",
          "category": [
           {
            "coding": [
             {
              "system": "http://snomed.info/sct",
              "code": "103693007",
              "display": "Diagnostic procedure (procedure)"
             }
            ],
            "text": "Diagnostics Procedure"
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "303653007",
             "display": "Computed tomography of head"
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example2.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "physiotherapy",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: physiotherapy</p><p><b>contained</b>: , </p><p><b>identifier</b>: Placer = 20170201-0001</p><p><b>basedOn</b>: <a>CarePlan/gpvisit</a></p><p><b>status</b>: completed</p><p><b>intent</b>: order</p><p><b>code</b>: Physiotherapy of chest (regime/therapy)  <span>(Details : {SNOMED CT code '34431008' = 'Physiotherapy of chest', given as 'Physiotherapy of chest (regime/therapy) '})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>occurrence</b>: Duration 15days, Do 1-1 per 1 days</p><p><b>asNeeded</b>: as needed to clear mucus <span>(Details )</span></p><p><b>authoredOn</b>: 01/02/2017 5:23:07 PM</p><p><b>requester</b>: <a>Dr Adam Careful</a></p><p><b>reasonReference</b>: id: cystic-fibrosis; Active <span>(Details : {http://terminology.hl7.org/CodeSystem/condition-clinical code 'active' = 'Active)</span>; Confirmed <span>(Details : {http://terminology.hl7.org/CodeSystem/condition-ver-status code 'confirmed' = 'Confirmed)</span>; Problem List Item <span>(Details : {http://terminology.hl7.org/CodeSystem/condition-category code 'problem-list-item' = 'Problem List Item', given as 'Problem List Item'})</span>; Mild <span>(Details : {SNOMED CT code '255604002' = 'Mild', given as 'Mild'})</span>; Cystic Fibrosis <span>(Details : {http://hl7.org/fhir/sid/icd-10-cm code 'E84.0' = 'E84.0', given as 'Cystic fibrosis with pulmonary manifestations'})</span>; onset: 12/11/2012</p><p><b>relevantHistory</b>: Author's Signature. Generated Summary: id: signature; recorded: 01/02/2017 5:23:07 PM; </p></div>"
          },
          "contained": [
           {
            "resourceType": "Provenance",
            "id": "signature",
            "target": [
             {
              "reference": "ServiceRequest/physiotherapy/_history/1"
             }
            ],
            "recorded": "2017-02-01T17:23:07Z",
            "agent": [
             {
              "role": [
               {
                "coding": [
                 {
                  "system": "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
                  "code": "AUT"
                 }
                ]
               }
              ],
              "who": {
               "reference": "Practitioner/example",
               "display": "Dr Adam Careful"
              }
             }
            ],
            "signature": [
             {
              "type": [
               {
                "system": "urn:iso-astm:E1762-95:2013",
                "code": "1.2.840.10065.1.12.1.1",
                "display": "Author's Signature"
               }
              ],
              "when": "2017-02-01T17:23:07Z",
              "who": {
               "reference": "Practitioner/example",
               "display": "Dr Adam Careful"
              },
              "targetFormat": "application/fhir+xml",
              "sigFormat": "application/signature+xml",
              "data": "dGhpcyBibG9iIGlzIHNuaXBwZWQ="
             }
            ]
           },
           {
            "resourceType": "Condition",
            "id": "cystic-fibrosis",
            "clinicalStatus": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/condition-clinical",
               "code": "active"
              }
             ]
            },
            "verificationStatus": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/condition-ver-status",
               "code": "confirmed"
              }
             ]
            },
            "category": [
             {
              "coding": [
               {
                "system": "http://terminology.hl7.org/CodeSystem/condition-category",
                "code": "problem-list-item",
                "display": "Problem List Item"
               }
              ]
             }
            ],
            "severity": {
             "coding": [
              {
               "system": "http://snomed.info/sct",
               "code": "255604002",
               "display": "Mild"
              }
             ]
            },
            "code": {
             "coding": [
              {
               "system": "http://hl7.org/fhir/sid/icd-10-cm",
               "code": "E84.0",
               "display": "Cystic fibrosis with pulmonary manifestations"
              }
             ],
             "text": "Cystic Fibrosis"
            },
            "subject": {
             "reference": "Patient/example"
            },
            "onsetDateTime": "2012-11-12"
           }
          ],
          "identifier": [
           {
            "type": {
             "coding": [
              {
               "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
               "code": "PLAC",
               "display": "Placer Identifier"
              }
             ],
             "text": "Placer"
            },
            "system": "http://goodhealth.org/placer-ids",
            "value": "20170201-0001"
           }
          ],
          "basedOn": [
           {
            "reference": "CarePlan/gpvisit"
           }
          ],
          "status": "completed",
          "intent": "order",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "34431008",
             "display": "Physiotherapy of chest (regime/therapy) "
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "occurrenceTiming": {
           "repeat": {
            "duration": 15,
            "durationMax": 25,
            "durationUnit": "min",
            "frequency": 1,
            "frequencyMax": 4,
            "period": 1,
            "periodUnit": "d"
           }
          },
          "asNeededCodeableConcept": {
           "text": "as needed to clear mucus"
          },
          "authoredOn": "2017-02-01T17:23:07Z",
          "requester": {
           "reference": "Practitioner/example",
           "display": "Dr Adam Careful"
          },
          "reasonReference": [
           {
            "reference": "#cystic-fibrosis"
           }
          ],
          "relevantHistory": [
           {
            "reference": "#signature",
            "display": "Author's Signature"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example3.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "do-not-turn",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: do-not-turn</p><p><b>identifier</b>: 20170201-0002</p><p><b>status</b>: active</p><p><b>intent</b>: order</p><p><b>priority</b>: stat</p><p><b>doNotPerform</b>: true</p><p><b>code</b>: Turning patient in bed (procedure) <span>(Details : {SNOMED CT code '359962006' = 'Turning patient in bed', given as 'Turning patient in bed (procedure)'})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>authoredOn</b>: 01/02/2017 5:23:07 PM</p><p><b>requester</b>: <a>Dr Adam Careful</a></p><p><b>reasonReference</b>: Patient has a spinal fracture</p></div>"
          },
          "identifier": [
           {
            "system": "http://goodhealth.org/placer-ids",
            "value": "20170201-0002"
           }
          ],
          "status": "active",
          "intent": "order",
          "priority": "stat",
          "doNotPerform": true,
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "359962006",
             "display": "Turning patient in bed (procedure)"
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "authoredOn": "2017-02-01T17:23:07Z",
          "requester": {
           "reference": "Practitioner/example",
           "display": "Dr Adam Careful"
          },
          "reasonReference": [
           {
            "display": "Patient has a spinal fracture"
           }
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "servicerequest-example4.json": {
         "value": {
          "resourceType": "ServiceRequest",
          "id": "benchpress",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: benchpress</p><p><b>status</b>: active</p><p><b>intent</b>: plan</p><p><b>code</b>: Bench Press (regime/therapy)  <span>(Details : {SNOMED CT code '229115003' = 'Bench press', given as 'Bench Press (regime/therapy) '})</span></p><p><b>subject</b>: <a>Patient/example</a></p><p><b>occurrence</b>: Count 20 times, Do 3 per 1 weeks</p><p><b>patientInstruction</b>: Start with 30kg 10-15 repetitions for three sets and increase in increments of 5kg when you feel ready</p></div>"
          },
          "status": "active",
          "intent": "plan",
          "code": {
           "coding": [
            {
             "system": "http://snomed.info/sct",
             "code": "229115003",
             "display": "Bench Press (regime/therapy) "
            }
           ]
          },
          "subject": {
           "reference": "Patient/example"
          },
          "occurrenceTiming": {
           "repeat": {
            "count": 20,
            "countMax": 30,
            "frequency": 3,
            "period": 1,
            "periodUnit": "wk"
           }
          },
          "patientInstruction": "Start with 30kg 10-15 repetitions for three sets and increase in increments of 5kg when you feel ready",
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "ServiceRequest"
    ],
    "parameters": [
     {
      "name": "authored",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "When request transitioned to being actionable"
     },
     {
      "name": "based-on",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The service request this appointment is allocated to assess"
     },
     {
      "name": "body-site",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Anatomical location, if relevant"
     },
     {
      "name": "category",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment"
     },
     {
      "name": "code",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "What is being requested/ordered"
     },
     {
      "name": "encounter",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Encounter created as part of"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "instantiates-canonical",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Instantiates FHIR protocol or definition"
     },
     {
      "name": "instantiates-uri",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Instantiates external protocol or definition"
     },
     {
      "name": "intent",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "proposal | plan | order | option"
     },
     {
      "name": "occurrence",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "When the charged service was applied"
     },
     {
      "name": "patient",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "performer",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Matches if the practitioner is listed as a performer in any of the \"simple\" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)"
     },
     {
      "name": "performer-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Performer role"
     },
     {
      "name": "priority",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Processing priority requested"
     },
     {
      "name": "replaces",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "CarePlan replaced by this CarePlan"
     },
     {
      "name": "requester",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Who/what is requesting service"
     },
     {
      "name": "requisition",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Composite Request ID"
     },
     {
      "name": "specimen",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The specimen details"
     },
     {
      "name": "status",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "active | inactive | entered-in-error | on-hold | unknown"
     },
     {
      "name": "subject",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/ServiceRequest"
         }
        }
       }
      }
     }
    }
   }
  },
  "/ServiceRequest/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "ServiceRequest"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/ServiceRequest"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "ServiceRequest"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/ServiceRequest"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "ServiceRequest"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/ServiceRequest/{id}/_history": {
   "get": {
    "tags": [
     "ServiceRequest"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/ServiceRequest"
         }
        }
       }
      }
     }
    }
   }
  },
  "/ServiceRequest/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "ServiceRequest"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/ServiceRequest"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "ServiceRequest"
  }
 ]
}