{
 "info": {
  "description": "The technical details of an endpoint that can be used for electronic services",
  "title": "FHIR R4 Endpoint Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "Endpoint": {
    "description": "The technical details of an endpoint that can be used for electronic services",
    "type": "object",
    "properties": {
     "address": {
      "type": "string",
      "description": "The technical base address for connecting to this endpoint"
     },
     "connectionType": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Protocol/Profile/Standard to be used with this endpoint connection"
     },
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for source (e.g. troubleshooting)"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "header": {
      "type": "string",
      "description": "Usage depends on the channel type"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Identifies this endpoint across multiple systems"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "managingOrganization": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Organization that manages this endpoint (might not be the organization that exposes the endpoint)"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "name": {
      "type": "string",
      "description": "A name that this endpoint can be identified by"
     },
     "payloadMimeType": {
      "type": "string",
      "description": "Mimetype to send. If not specified, the content could be anything (including no payload, if the connectionType defined this)"
     },
     "payloadType": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)"
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Interval the endpoint is expected to be operational"
     },
     "status": {
      "type": "string",
      "description": "active | suspended | error | off | entered-in-error | test"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/Endpoint": {
   "post": {
    "tags": [
     "Endpoint"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Endpoint"
       },
       "examples": {
        "endpoint-example-direct.json": {
         "value": {
          "resourceType": "Endpoint",
          "id": "direct-endpoint",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: direct-endpoint</p><p><b>status</b>: active</p><p><b>connectionType</b>: direct-project (Details: [not stated] code direct-project = 'direct-project', stated as 'null')</p><p><b>name</b>: MARTIN SMIETANKA</p><p><b>managingOrganization</b>: <a>Organization/299</a></p><p><b>payloadType</b>: urn:hl7-org:sdwg:ccda-structuredBody:1.1 <span>(Details : {urn:oid:1.3.6.1.4.1.19376.1.2.3 code 'urn:hl7-org:sdwg:ccda-structuredBody:1.1' = 'urn:hl7-org:sdwg:ccda-structuredBody:1.1)</span></p><p><b>address</b>: <a>MARTIN.SMIETANKA@directnppes.com</a></p></div>"
          },
          "status": "active",
          "connectionType": {
           "code": "direct-project"
          },
          "name": "MARTIN SMIETANKA",
          "managingOrganization": {
           "reference": "Organization/299"
          },
          "payloadType": [
           {
            "coding": [
             {
              "system": "urn:oid:1.3.6.1.4.1.19376.1.2.3",
              "code": "urn:hl7-org:sdwg:ccda-structuredBody:1.1"
             }
            ]
           }
          ],
          "address": "mailto:MARTIN.SMIETANKA@directnppes.com",
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "endpoint-example-iid.json": {
         "value": {
          "resourceType": "Endpoint",
          "id": "example-iid",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\tExample of an Imaging IID type endpoint\n\t\t</div>"
          },
          "status": "active",
          "connectionType": {
           "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
           "code": "ihe-iid"
          },
          "name": "PACS Hospital Invoke Image Display endpoint",
          "payloadType": [
           {
            "text": "DICOM IID"
           }
          ],
          "address": "https://pacs.hospital.org/IHEInvokeImageDisplay",
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "endpoint-example-wadors.json": {
         "value": {
          "resourceType": "Endpoint",
          "id": "example-wadors",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\tExample of an Imaging DICOM WADO-RS type endpoint\n\t\t</div>"
          },
          "status": "active",
          "connectionType": {
           "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
           "code": "dicom-wado-rs"
          },
          "name": "PACS Hospital DICOM WADO-RS endpoint",
          "payloadType": [
           {
            "text": "DICOM WADO-RS"
           }
          ],
          "payloadMimeType": [
           "application/dicom"
          ],
          "address": "https://pacs.hospital.org/wado-rs",
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "endpoint-example.json": {
         "value": {
          "resourceType": "Endpoint",
          "id": "example",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\tHealth Intersections CarePlan Hub<br/>\n\t\t\tCarePlans can be uploaded to/from this loccation\n\t\t</div>"
          },
          "identifier": [
           {
            "system": "http://example.org/enpoint-identifier",
            "value": "epcp12"
           }
          ],
          "status": "active",
          "connectionType": {
           "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
           "code": "hl7-fhir-rest"
          },
          "name": "Health Intersections CarePlan Hub",
          "managingOrganization": {
           "reference": "Organization/hl7"
          },
          "contact": [
           {
            "system": "email",
            "value": "endpointmanager@example.org",
            "use": "work"
           }
          ],
          "period": {
           "start": "2014-09-01"
          },
          "payloadType": [
           {
            "coding": [
             {
              "system": "http://hl7.org/fhir/resource-types",
              "code": "CarePlan"
             }
            ]
           }
          ],
          "payloadMimeType": [
           "application/fhir+xml"
          ],
          "address": "http://fhir3.healthintersections.com.au/open/CarePlan",
          "header": [
           "bearer-code BASGS534s4"
          ],
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "endpoint-examples-general-template.json": {
         "value": {
          "resourceType": "Bundle",
          "id": "b0a5e4277-83c4-4adb-87e2-e3efe3369b6f",
          "meta": {
           "lastUpdated": "2012-05-29T23:45:32Z",
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          },
          "type": "collection",
          "entry": [
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/71",
            "resource": {
             "resourceType": "Endpoint",
             "id": "71",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              CarePlan repository, CarePlan<br/>\n              Address: https://sqlonfhir-dstu2.azurewebsites.net/fhir</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7-fhir-rest"
             },
             "name": "CarePlan repository",
             "managingOrganization": {
              "display": "Telstra Health"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "CarePlan"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/fhir+xml"
             ],
             "address": "https://sqlonfhir-dstu2.azurewebsites.net/fhir"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/72",
            "resource": {
             "resourceType": "Endpoint",
             "id": "72",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Questionnaire Destination, QuestionnaireResponse<br/>\n              Address: https://sqlonfhir-dstu2.azurewebsites.net/fhir</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7-fhir-rest"
             },
             "name": "Questionnaire Destination",
             "managingOrganization": {
              "display": "Telstra Health"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "QuestionnaireResponse"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/fhir+xml"
             ],
             "address": "https://sqlonfhir-dstu2.azurewebsites.net/fhir"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/73",
            "resource": {
             "resourceType": "Endpoint",
             "id": "73",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Referral Requests, ServiceRequest<br/>\n              Address: https://sqlonfhir-dstu2.azurewebsites.net/fhir</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7-fhir-rest"
             },
             "name": "Referral Requests",
             "managingOrganization": {
              "display": "Telstra Health"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "ServiceRequest"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/fhir+xml"
             ],
             "address": "https://sqlonfhir-dstu2.azurewebsites.net/fhir"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/74",
            "resource": {
             "resourceType": "Endpoint",
             "id": "74",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Referral Requests, ServiceRequest QuestionnaireResponse<br/>\n              Address: https://open.epic.com/Interface/FHIR</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7-fhir-rest"
             },
             "name": "Referral Requests",
             "managingOrganization": {
              "display": "Epic demo organization"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "ServiceRequest QuestionnaireResponse"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/fhir+json"
             ],
             "address": "https://open.epic.com/Interface/FHIR"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/75",
            "resource": {
             "resourceType": "Endpoint",
             "id": "75",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Subscription receiver, ServiceRequest<br/>\n              Address: mailto:subscriptions@example.org</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "secure-email"
             },
             "name": "Subscription receiver",
             "managingOrganization": {
              "display": "Telstra Health"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "ServiceRequest"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/fhir+xml"
             ],
             "address": "mailto:subscriptions@example.org"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/76",
            "resource": {
             "resourceType": "Endpoint",
             "id": "76",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              valid usecase?, CDA-EventSummary<br/>\n              Address: https://sqlonfhir-dstu2.azurewebsites.net/fhir</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7-fhir-msg"
             },
             "name": "valid usecase?",
             "managingOrganization": {
              "display": "Telstra Health"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "CDA-EventSummary"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/pdf"
             ],
             "address": "https://sqlonfhir-dstu2.azurewebsites.net/fhir"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/77",
            "resource": {
             "resourceType": "Endpoint",
             "id": "77",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              v2 referral Requests, REF-I12<br/>\n              Address: 127.0.0.1</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "hl7v2-mllp"
             },
             "name": "v2 referral Requests",
             "managingOrganization": {
              "display": "Epic demo organization"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "REF-I12"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/hl7-v2"
             ],
             "address": "127.0.0.1"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/78",
            "resource": {
             "resourceType": "Endpoint",
             "id": "78",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              xds event summaries, CDA-EventSummary<br/>\n              Address: https://open.epic.com/Interface/XDS.b</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "ihe-xds"
             },
             "name": "xds event summaries",
             "managingOrganization": {
              "display": "Epic demo organization"
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "CDA-EventSummary"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/hl7-sda+xml; variant=XDA/XDS"
             ],
             "address": "https://open.epic.com/Interface/XDS.b"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/79",
            "resource": {
             "resourceType": "Endpoint",
             "id": "79",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/dicomweb</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "dicom-wado-rs"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=DICOM WADO-RS"
             ],
             "address": "https://pacs.hospital.org/dicomweb"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/80",
            "resource": {
             "resourceType": "Endpoint",
             "id": "80",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/dicomweb</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "dicom-qido-rs"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=DICOM QIDO-RS"
             ],
             "address": "https://pacs.hospital.org/dicomweb"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/81",
            "resource": {
             "resourceType": "Endpoint",
             "id": "81",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/dicomweb</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "dicom-stow-rs"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=DICOM STOW-RS"
             ],
             "address": "https://pacs.hospital.org/dicomweb"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/82",
            "resource": {
             "resourceType": "Endpoint",
             "id": "82",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/dicomweb</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "dicom-stow-rs"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=DICOM STOW-RS"
             ],
             "address": "https://pacs.hospital.org/dicomweb"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/83",
            "resource": {
             "resourceType": "Endpoint",
             "id": "83",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/wadoUri</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "dicom-wado-uri"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=DICOM WADO-URI"
             ],
             "address": "https://pacs.hospital.org/wadoUri"
            }
           },
           {
            "fullUrl": "http://hl7.org/fhir/Endpoint/84",
            "resource": {
             "resourceType": "Endpoint",
             "id": "84",
             "text": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n              Enterprise Image Archive, varies (application/dicom, application/dicom+xml, image/jpeg, and many more)<br/>\n              Address: https://pacs.hospital.org/IHEInvokeImageDisplay</div>"
             },
             "status": "active",
             "connectionType": {
              "system": "http://terminology.hl7.org/CodeSystem/endpoint-connection-type",
              "code": "ihe-iid"
             },
             "name": "Enterprise Image Archive",
             "managingOrganization": {
              "display": "Multi-site Co."
             },
             "payloadType": [
              {
               "coding": [
                {
                 "code": "varies (application/dicom, application/dicom+xml, image/jpeg, and many more)"
                }
               ]
              }
             ],
             "payloadMimeType": [
              "application/dicom; variant=IHE IID"
             ],
             "address": "https://pacs.hospital.org/IHEInvokeImageDisplay"
            }
           }
          ]
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "Endpoint"
    ],
    "parameters": [
     {
      "name": "connection-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Protocol/Profile/Standard to be used with this endpoint connection"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "name",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Human-readable label"
     },
     {
      "name": "organization",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Custodian of the consent"
     },
     {
      "name": "payload-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The type of content that may be used at this endpoint (e.g. XDS Discharge summaries)"
     },
     {
      "name": "status",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "active | inactive | entered-in-error | on-hold | unknown"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Endpoint"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Endpoint/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "Endpoint"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Endpoint"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Endpoint"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Endpoint"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Endpoint"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/Endpoint/{id}/_history": {
   "get": {
    "tags": [
     "Endpoint"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Endpoint"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Endpoint/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "Endpoint"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Endpoint"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "Endpoint"
  }
 ]
}