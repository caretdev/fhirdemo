{
 "info": {
  "description": "A structured set of questions",
  "title": "FHIR R4 Questionnaire Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "Questionnaire": {
    "description": "A structured set of questions",
    "type": "object",
    "properties": {
     "approvalDate": {
      "type": "string",
      "description": "When the questionnaire was approved by publisher"
     },
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Concept that represents the overall questionnaire"
     },
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details for the publisher"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "copyright": {
      "type": "string",
      "description": "Use and/or publishing restrictions"
     },
     "date": {
      "type": "string",
      "description": "Date last changed"
     },
     "derivedFrom": {
      "type": "string",
      "description": "Instantiates protocol or definition"
     },
     "description": {
      "type": "string",
      "description": "Natural language description of the questionnaire"
     },
     "effectivePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "When the questionnaire is expected to be used"
     },
     "experimental": {
      "type": "boolean",
      "description": "For testing purposes, not real usage"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Additional identifier for the questionnaire"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "item": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Questionnaire.item"
      },
      "description": "Questions and sections within the Questionnaire"
     },
     "jurisdiction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Intended jurisdiction for questionnaire (if applicable)"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "lastReviewDate": {
      "type": "string",
      "description": "When the questionnaire was last reviewed"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "name": {
      "type": "string",
      "description": "Name for this questionnaire (computer friendly)"
     },
     "publisher": {
      "type": "string",
      "description": "Name of the publisher (organization or individual)"
     },
     "purpose": {
      "type": "string",
      "description": "Why this questionnaire is defined"
     },
     "status": {
      "type": "string",
      "description": "draft | active | retired | unknown"
     },
     "subjectType": {
      "type": "string",
      "description": "Resource that can be subject of QuestionnaireResponse"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     },
     "title": {
      "type": "string",
      "description": "Name for this questionnaire (human friendly)"
     },
     "url": {
      "type": "string",
      "description": "Canonical identifier for this questionnaire, represented as a URI (globally unique)"
     },
     "useContext": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/UsageContext"
      },
      "description": "The context that the content is intended to support"
     },
     "version": {
      "type": "string",
      "description": "Business version of the questionnaire"
     }
    },
    "required": [
     "id"
    ]
   },
   "Questionnaire.item": {
    "description": "",
    "type": "object",
    "properties": {
     "answerOption": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Questionnaire.item.answerOption"
      },
      "description": "Permitted answer"
     },
     "answerValueSet": {
      "type": "string",
      "description": "Valueset containing permitted answers"
     },
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Corresponding concept for this item in a terminology"
     },
     "definition": {
      "type": "string",
      "description": "ElementDefinition - details for the item"
     },
     "enableBehavior": {
      "type": "string",
      "description": "all | any"
     },
     "enableWhen": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Questionnaire.item.enableWhen"
      },
      "description": "Only allow data when"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "initial": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Questionnaire.item.initial"
      },
      "description": "Initial value(s) when item is first rendered"
     },
     "item": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Questionnaire.item"
      },
      "description": "Nested questionnaire items"
     },
     "linkId": {
      "type": "string",
      "description": "Unique id for item in questionnaire"
     },
     "maxLength": {
      "type": "number",
      "description": "No more than this many characters"
     },
     "prefix": {
      "type": "string",
      "description": "E.g. \"1(a)\", \"2.5.3\""
     },
     "readOnly": {
      "type": "boolean",
      "description": "Don't allow human editing"
     },
     "repeats": {
      "type": "boolean",
      "description": "Whether the item may repeat"
     },
     "required": {
      "type": "boolean",
      "description": "Whether the item must be included in data results"
     },
     "text": {
      "type": "string",
      "description": "Primary text for the item"
     },
     "type": {
      "type": "string",
      "description": "group | display | boolean | decimal | integer | date | dateTime +"
     }
    },
    "required": [
     "id"
    ]
   },
   "Questionnaire.item.answerOption": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "initialSelected": {
      "type": "boolean",
      "description": "Whether option is selected by default"
     },
     "value": {
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Questionnaire.item.enableWhen": {
    "description": "",
    "type": "object",
    "properties": {
     "answer": {
      "description": ""
     },
     "answerBoolean": {
      "type": "boolean",
      "description": ""
     },
     "answerCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "answerDate": {
      "type": "string",
      "description": ""
     },
     "answerDateTime": {
      "type": "string",
      "description": ""
     },
     "answerDecimal": {
      "type": "number",
      "description": ""
     },
     "answerInteger": {
      "type": "number",
      "description": ""
     },
     "answerQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "answerReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "answerString": {
      "type": "string",
      "description": ""
     },
     "answerTime": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "operator": {
      "type": "string",
      "description": "exists | = | != | > | < | >= | <="
     },
     "question": {
      "type": "string",
      "description": "Question that determines whether item is enabled"
     }
    },
    "required": [
     "id"
    ]
   },
   "Questionnaire.item.initial": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "value": {
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "QuestionnaireResponse": {
    "description": "A structured set of questions and their answers",
    "type": "object",
    "properties": {
     "author": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Person who received and recorded the answers"
     },
     "authored": {
      "type": "string",
      "description": "Date the answers were gathered"
     },
     "basedOn": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Request fulfilled by this QuestionnaireResponse"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "encounter": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Encounter created as part of"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Unique id for this set of answers"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "item": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/QuestionnaireResponse.item"
      },
      "description": "Groups and questions"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "partOf": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Reference"
      },
      "description": "Part of this action"
     },
     "questionnaire": {
      "type": "string",
      "description": "Form being answered"
     },
     "source": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The person who answered the questions"
     },
     "status": {
      "type": "string",
      "description": "in-progress | completed | amended | entered-in-error | stopped"
     },
     "subject": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The subject of the questions"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     }
    },
    "required": [
     "id"
    ]
   },
   "QuestionnaireResponse.item": {
    "description": "",
    "type": "object",
    "properties": {
     "answer": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/QuestionnaireResponse.item.answer"
      },
      "description": "The response(s) to the question"
     },
     "definition": {
      "type": "string",
      "description": "ElementDefinition - details for the item"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "item": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/QuestionnaireResponse.item"
      },
      "description": "Nested questionnaire response items"
     },
     "linkId": {
      "type": "string",
      "description": "Pointer to specific item from Questionnaire"
     },
     "text": {
      "type": "string",
      "description": "Name for group or question text"
     }
    },
    "required": [
     "id"
    ]
   },
   "QuestionnaireResponse.item.answer": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "item": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/QuestionnaireResponse.item"
      },
      "description": "Nested groups and questions"
     },
     "value": {
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/Questionnaire": {
   "post": {
    "tags": [
     "Questionnaire"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Questionnaire"
       },
       "examples": {
        "questionnaire-example-bluebook.json": {
         "value": {
          "resourceType": "Questionnaire",
          "id": "bb",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <pre>\n        <b>Birth details - To be completed by health professional</b>\n  Name of child: ____________________________________\n            Sex: __\n            \n  Neonatal Information\n    Birth Weight (kg): ___________\n    Birth Length (cm): ___________\n    Vitamin K given  : __\n             1st dose: ___________\n             2nd dose: ___________\n    Hep B given      : __\n      Date given     : ___________\n    Abnormalities noted at birth:\n      _______________________________________________\n      </pre>\n    </div>"
          },
          "url": "http://hl7.org/fhir/Questionnaire/bb",
          "title": "NSW Government My Personal Health Record",
          "status": "draft",
          "subjectType": [
           "Patient"
          ],
          "date": "2013-02-19",
          "publisher": "New South Wales Department of Health",
          "jurisdiction": [
           {
            "coding": [
             {
              "system": "urn:iso:std:iso:3166",
              "code": "AU"
             }
            ]
           }
          ],
          "item": [
           {
            "linkId": "birthDetails",
            "text": "Birth details - To be completed by health professional",
            "type": "group",
            "item": [
             {
              "linkId": "group",
              "type": "group",
              "item": [
               {
                "linkId": "nameOfChild",
                "text": "Name of child",
                "type": "string"
               },
               {
                "linkId": "sex",
                "text": "Sex",
                "type": "choice",
                "answerOption": [
                 {
                  "valueCoding": {
                   "code": "F"
                  }
                 },
                 {
                  "valueCoding": {
                   "code": "M"
                  }
                 }
                ]
               }
              ]
             },
             {
              "linkId": "neonatalInformation",
              "text": "Neonatal Information",
              "type": "group",
              "item": [
               {
                "linkId": "birthWeight",
                "text": "Birth weight (kg)",
                "type": "decimal"
               },
               {
                "linkId": "birthLength",
                "text": "Birth length (cm)",
                "type": "decimal"
               },
               {
                "linkId": "vitaminKgiven",
                "text": "Vitamin K given",
                "type": "choice",
                "answerOption": [
                 {
                  "valueCoding": {
                   "code": "INJECTION"
                  }
                 },
                 {
                  "valueCoding": {
                   "code": "INTRAVENOUS"
                  }
                 },
                 {
                  "valueCoding": {
                   "code": "ORAL"
                  }
                 }
                ],
                "item": [
                 {
                  "linkId": "vitaminKgivenDoses",
                  "type": "group",
                  "enableWhen": [
                   {
                    "question": "vitaminKgiven",
                    "operator": "exists",
                    "answerBoolean": true
                   }
                  ],
                  "item": [
                   {
                    "linkId": "vitaminiKDose1",
                    "text": "1st dose",
                    "type": "dateTime"
                   },
                   {
                    "linkId": "vitaminiKDose2",
                    "text": "2nd dose",
                    "type": "dateTime"
                   }
                  ]
                 }
                ]
               },
               {
                "linkId": "hepBgiven",
                "text": "Hep B given y / n",
                "type": "boolean",
                "item": [
                 {
                  "linkId": "hepBgivenDate",
                  "text": "Date given",
                  "type": "date"
                 }
                ]
               },
               {
                "linkId": "abnormalitiesAtBirth",
                "text": "Abnormalities noted at birth",
                "type": "string"
               }
              ]
             }
            ]
           }
          ]
         }
        },
        "questionnaire-example-f201-lifelines.json": {
         "value": {
          "resourceType": "Questionnaire",
          "id": "f201",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <pre>Lifelines Questionnaire 1 part 1\n  1. Do you have allergies?\n  2. General Questions:\n    2.a) What is your gender?\n    2.b) What is your date of birth?\n    2.c) What is your country of birth?\n    2.d) What is your marital status?\n    3. Intoxications:\n      3.a) Do you smoke?\n      3.b) Do you drink alcohol?</pre>\n    </div>"
          },
          "url": "http://hl7.org/fhir/Questionnaire/f201",
          "status": "active",
          "subjectType": [
           "Patient"
          ],
          "date": "2010",
          "code": [
           {
            "system": "http://example.org/system/code/lifelines/nl",
            "code": "VL 1-1, 18-65_1.2.2",
            "display": "Lifelines Questionnaire 1 part 1"
           }
          ],
          "item": [
           {
            "linkId": "1",
            "text": "Do you have allergies?",
            "type": "boolean"
           },
           {
            "linkId": "2",
            "text": "General questions",
            "type": "group",
            "item": [
             {
              "linkId": "2.1",
              "text": "What is your gender?",
              "type": "string"
             },
             {
              "linkId": "2.2",
              "text": "What is your date of birth?",
              "type": "date"
             },
             {
              "linkId": "2.3",
              "text": "What is your country of birth?",
              "type": "string"
             },
             {
              "linkId": "2.4",
              "text": "What is your marital status?",
              "type": "string"
             }
            ]
           },
           {
            "linkId": "3",
            "text": "Intoxications",
            "type": "group",
            "item": [
             {
              "linkId": "3.1",
              "text": "Do you smoke?",
              "type": "boolean"
             },
             {
              "linkId": "3.2",
              "text": "Do you drink alchohol?",
              "type": "boolean"
             }
            ]
           }
          ]
         }
        },
        "questionnaire-example-gcs.json": {
         "value": {
          "resourceType": "Questionnaire",
          "id": "gcs",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: gcs</p><p><b>contained</b>: , , </p><p><b>url</b>: <b>http://hl7.org/fhir/Questionnaire/gcs</b></p><p><b>title</b>: Glasgow Coma Score</p><p><b>status</b>: draft</p><p><b>subjectType</b>: Patient</p><p><b>date</b>: 03/08/2015</p><p><b>publisher</b>: FHIR Project team</p><p><b>code</b>: Glasgow coma score total (Details: LOINC code 9269-2 = 'Glasgow coma score total', stated as 'null')</p><blockquote><p><b>item</b></p><p><b>linkId</b>: 1.1</p><p><b>code</b>: Glasgow coma score verbal (Details: LOINC code 9270-0 = 'Glasgow coma score verbal', stated as 'null')</p><p><b>type</b>: choice</p><p><b>answerValueSet</b>: <a>#verbal</a></p></blockquote><blockquote><p><b>item</b></p><p><b>linkId</b>: 1.2</p><p><b>code</b>: Glasgow coma score motor (Details: LOINC code 9268-4 = 'Glasgow coma score motor', stated as 'null')</p><p><b>type</b>: choice</p><p><b>answerValueSet</b>: <a>#motor</a></p></blockquote><blockquote><p><b>item</b></p><p><b>linkId</b>: 1.3</p><p><b>code</b>: Glasgow coma score eye opening (Details: LOINC code 9267-6 = 'Glasgow coma score eye opening', stated as 'null')</p><p><b>type</b>: choice</p><p><b>answerValueSet</b>: <a>#eye</a></p></blockquote></div>"
          },
          "contained": [
           {
            "resourceType": "ValueSet",
            "id": "motor",
            "identifier": [
             {
              "system": "http://loinc.org",
              "value": "http://loinc.org/ValueSet/LL357-5"
             }
            ],
            "name": "GCS Motor Value Set",
            "status": "active",
            "description": "LOINC ANSWER LIST    (LL357-5)",
            "compose": {
             "include": [
              {
               "system": "http://loinc.org",
               "concept": [
                {
                 "code": "LA6562-8",
                 "display": "No motor response"
                },
                {
                 "code": "LA6563-6",
                 "display": "Extension to pain"
                },
                {
                 "code": "LA6564-4",
                 "display": "Flexion to pain"
                },
                {
                 "code": "LA6565-1",
                 "display": "Withdrawl from pain"
                },
                {
                 "code": "LA6566-9",
                 "display": "Localizing pain"
                },
                {
                 "code": "LA6567-7",
                 "display": "Obeys commands"
                }
               ]
              }
             ]
            }
           },
           {
            "resourceType": "ValueSet",
            "id": "verbal",
            "identifier": [
             {
              "system": "http://loinc.org",
              "value": "http://loinc.org/ValueSet/LL356-7"
             }
            ],
            "name": "GCS Verbal Value Set",
            "status": "active",
            "description": "LOINC ANSWER LIST    (LL356-7)",
            "compose": {
             "include": [
              {
               "system": "http://loinc.org",
               "concept": [
                {
                 "code": "LA6557-8",
                 "display": "No verbal response (>2yrs); no vocal response (<=2yrs)"
                },
                {
                 "code": "LA6558-6",
                 "display": "Incomprehensible sounds"
                },
                {
                 "code": "LA6559-4",
                 "display": "Inappropriate words"
                },
                {
                 "code": "LA6560-2",
                 "display": "Confused"
                },
                {
                 "code": "LA6561-0",
                 "display": "Oriented"
                }
               ]
              }
             ]
            }
           },
           {
            "resourceType": "ValueSet",
            "id": "eye",
            "identifier": [
             {
              "system": "http://loinc.org",
              "value": "http://loinc.org/ValueSet/LL355-9"
             }
            ],
            "name": "GCS Eye Value Set",
            "status": "active",
            "description": "LOINC ANSWER LIST    (LL355-9)",
            "compose": {
             "include": [
              {
               "system": "http://loinc.org",
               "concept": [
                {
                 "code": "LA6553-7",
                 "display": "No eye opening"
                },
                {
                 "code": "LA6554-5",
                 "display": "Eye opening to pain"
                },
                {
                 "code": "LA6555-2",
                 "display": "Eye opening to verbal command"
                },
                {
                 "code": "LA6556-0",
                 "display": "Eyes open spontaneously"
                }
               ]
              }
             ]
            }
           }
          ],
          "url": "http://hl7.org/fhir/Questionnaire/gcs",
          "title": "Glasgow Coma Score",
          "status": "draft",
          "subjectType": [
           "Patient"
          ],
          "date": "2015-08-03",
          "publisher": "FHIR Project team",
          "code": [
           {
            "system": "http://loinc.org",
            "code": "9269-2"
           }
          ],
          "item": [
           {
            "linkId": "1.1",
            "code": [
             {
              "system": "http://loinc.org",
              "code": "9270-0"
             }
            ],
            "type": "choice",
            "answerValueSet": "#verbal"
           },
           {
            "linkId": "1.2",
            "code": [
             {
              "system": "http://loinc.org",
              "code": "9268-4"
             }
            ],
            "type": "choice",
            "answerValueSet": "#motor"
           },
           {
            "linkId": "1.3",
            "code": [
             {
              "system": "http://loinc.org",
              "code": "9267-6"
             }
            ],
            "type": "choice",
            "answerValueSet": "#eye"
           }
          ]
         }
        },
        "questionnaire-example.json": {
         "value": {
          "resourceType": "Questionnaire",
          "id": "3141",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <pre>\n            1.Comorbidity?\n              1.1 Cardial Comorbidity\n                1.1.1 Angina?\n                1.1.2 MI?\n              1.2 Vascular Comorbidity?\n              ...\n            Histopathology\n              Abdominal\n                pT category?\n              ...\n          </pre>\n    </div>"
          },
          "url": "http://hl7.org/fhir/Questionnaire/3141",
          "title": "Cancer Quality Forum Questionnaire 2012",
          "status": "draft",
          "subjectType": [
           "Patient"
          ],
          "date": "2012-01",
          "item": [
           {
            "linkId": "1",
            "code": [
             {
              "system": "http://example.org/system/code/sections",
              "code": "COMORBIDITY"
             }
            ],
            "type": "group",
            "item": [
             {
              "linkId": "1.1",
              "code": [
               {
                "system": "http://example.org/system/code/questions",
                "code": "COMORB"
               }
              ],
              "prefix": "1",
              "type": "choice",
              "answerValueSet": "http://hl7.org/fhir/ValueSet/yesnodontknow",
              "item": [
               {
                "linkId": "1.1.1",
                "code": [
                 {
                  "system": "http://example.org/system/code/sections",
                  "code": "CARDIAL"
                 }
                ],
                "type": "group",
                "enableWhen": [
                 {
                  "question": "1.1",
                  "operator": "=",
                  "answerCoding": {
                   "system": "http://terminology.hl7.org/CodeSystem/v2-0136",
                   "code": "Y"
                  }
                 }
                ],
                "item": [
                 {
                  "linkId": "1.1.1.1",
                  "code": [
                   {
                    "system": "http://example.org/system/code/questions",
                    "code": "COMORBCAR"
                   }
                  ],
                  "prefix": "1.1",
                  "type": "choice",
                  "answerValueSet": "http://hl7.org/fhir/ValueSet/yesnodontknow",
                  "item": [
                   {
                    "linkId": "1.1.1.1.1",
                    "code": [
                     {
                      "system": "http://example.org/system/code/questions",
                      "code": "COMCAR00",
                      "display": "Angina Pectoris"
                     },
                     {
                      "system": "http://snomed.info/sct",
                      "code": "194828000",
                      "display": "Angina (disorder)"
                     }
                    ],
                    "prefix": "1.1.1",
                    "type": "choice",
                    "answerValueSet": "http://hl7.org/fhir/ValueSet/yesnodontknow"
                   },
                   {
                    "linkId": "1.1.1.1.2",
                    "code": [
                     {
                      "system": "http://snomed.info/sct",
                      "code": "22298006",
                      "display": "Myocardial infarction (disorder)"
                     }
                    ],
                    "prefix": "1.1.2",
                    "type": "choice",
                    "answerValueSet": "http://hl7.org/fhir/ValueSet/yesnodontknow"
                   }
                  ]
                 },
                 {
                  "linkId": "1.1.1.2",
                  "code": [
                   {
                    "system": "http://example.org/system/code/questions",
                    "code": "COMORBVAS"
                   }
                  ],
                  "prefix": "1.2",
                  "type": "choice",
                  "answerValueSet": "http://hl7.org/fhir/ValueSet/yesnodontknow"
                 }
                ]
               }
              ]
             }
            ]
           },
           {
            "linkId": "2",
            "code": [
             {
              "system": "http://example.org/system/code/sections",
              "code": "HISTOPATHOLOGY"
             }
            ],
            "type": "group",
            "item": [
             {
              "linkId": "2.1",
              "code": [
               {
                "system": "http://example.org/system/code/sections",
                "code": "ABDOMINAL"
               }
              ],
              "type": "group",
              "item": [
               {
                "linkId": "2.1.2",
                "code": [
                 {
                  "system": "http://example.org/system/code/questions",
                  "code": "STADPT",
                  "display": "pT category"
                 }
                ],
                "type": "choice"
               }
              ]
             }
            ]
           }
          ]
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "Questionnaire"
    ],
    "parameters": [
     {
      "name": "code",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": ""
     },
     {
      "name": "context",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context assigned to the activity definition"
     },
     {
      "name": "context-quantity",
      "in": "query",
      "schema": {
       "type": "integer"
      },
      "description": "A quantity- or range-valued use context assigned to the activity definition"
     },
     {
      "name": "context-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A type of use context assigned to the activity definition"
     },
     {
      "name": "context-type-quantity",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context type and quantity- or range-based value assigned to the activity definition"
     },
     {
      "name": "context-type-value",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context type and value assigned to the activity definition"
     },
     {
      "name": "date",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "The activity definition publication date"
     },
     {
      "name": "definition",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Activity or plan definitions used by plan definition"
     },
     {
      "name": "description",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The description of the activity definition"
     },
     {
      "name": "effective",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "The time during which the activity definition is intended to be in use"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "jurisdiction",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Intended jurisdiction for the activity definition"
     },
     {
      "name": "name",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Human-readable label"
     },
     {
      "name": "publisher",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Name of the publisher of the activity definition"
     },
     {
      "name": "status",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "active | inactive | entered-in-error | on-hold | unknown"
     },
     {
      "name": "subject-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Resource that can be subject of QuestionnaireResponse"
     },
     {
      "name": "title",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The human-friendly name of the activity definition"
     },
     {
      "name": "url",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The uri that identifies the activity definition"
     },
     {
      "name": "version",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The business version of the activity definition"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Questionnaire"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Questionnaire/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "Questionnaire"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Questionnaire"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Questionnaire"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Questionnaire"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Questionnaire"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/Questionnaire/{id}/_history": {
   "get": {
    "tags": [
     "Questionnaire"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Questionnaire"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Questionnaire/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "Questionnaire"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Questionnaire"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "Questionnaire"
  }
 ]
}