{
 "info": {
  "description": "Resource for non-supported content",
  "title": "FHIR R4 Basic Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "Basic": {
    "description": "Resource for non-supported content",
    "type": "object",
    "properties": {
     "author": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who created"
     },
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Kind of Resource"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "created": {
      "type": "string",
      "description": "When created"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Business identifier"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "subject": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Identifies the focus of this resource"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/Basic": {
   "post": {
    "tags": [
     "Basic"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Basic"
       },
       "examples": {
        "basic-example-narrative.json": {
         "value": {
          "resourceType": "Basic",
          "id": "basic-example-narrative",
          "text": {
           "status": "additional",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <h1>Example Narrative</h1> \n      <h2>Plain HTML, No Styles</h2> \n      <h3>Heading 3</h3>\n      <h4>Heading 4</h4>\n      <h5>Heading 5</h5>\n      <h6>Heading 6</h6>\n      <p>\n        Paragraph. <span>span</span>. <a href=\"#link\">Link</a>. <b>Bold</b>, br:<br/> <em>em</em>, <i>Italics</i>,\n        <strong>strong</strong>, <small>small</small>, <big>big</big> <tt>Teletype Text</tt>, <small>small</small>, \n        <dfn>Definition term</dfn>, <q>q</q>, <var>var</var>.\n        All provided by \n        <abbr title=\"Health Level 7\">HL7</abbr>, for <acronym title=\"Fast Healthcare Interoperability Resources\">FHIR</acronym> (<cite>cite</cite>).\n      </p>\n      <blockquote>\n        <p>Paragraph in a blockquote, with an hr after it:</p>\n      </blockquote>\n      <hr/>\n      <div>\n      <p>Paragraph in a div (<a name=\"link\">Link Target</a>)</p>\n      </div>   \n      <ul>\n        <li>Unordered List Item</li>      \n      </ul>   \n      <ol>\n        <li>Ordered List Item</li>\n      </ol>\n      <dl>\n        <dt>DT Item</dt><dd>DD Item</dd>\n      </dl>\n      <pre>\n        Some Pre Text\n          with a line break\n      </pre>\n      <p>Table:</p>\n      <table>\n        <caption>Table Caption</caption>\n        <colgroup>\n          <col style=\"background-color:red\" span=\"2\"/>\n          <col style=\"background-color:yellow\"/>\n        </colgroup>      \n        <thead>\n          <tr>\n            <th>Head Cell 1</th>\n            <th>Head Cell 2</th>\n            <th>Head Cell 3</th>\n          </tr>\n        </thead>\n        <tfoot>\n          <tr>\n            <td>Foot Cell 1</td>\n            <td>Foot Cell 2</td>\n            <td>Foot Cell 3</td>\n          </tr>\n        </tfoot>\n        <tbody>\n          <tr>\n            <td>Body Cell 1</td>\n            <td>Body Cell 2</td>\n            <td>Body Cell 3</td>\n          </tr>\n        </tbody>\n      </table>\n      <code>Code Block</code>\n      <samp>Sample Block</samp>\n      <h2>External Styles</h2> \n      <h3>Text:</h3> \n      <p>Example Text: <span class=\"bold\">bold</span>, <span class=\"italics\">italics</span>, <span class=\"underline\">underline</span> \n        and <span class=\"strikethrough\">strikethrough</span></p>\n      <p class=\"left\">This paragraph is left aligned. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. </p>  \n      <p class=\"right\">This paragraph is right aligned. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. </p>  \n      <p class=\"center\">This paragraph is center aligned. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. </p>  \n      <p class=\"justify\">This paragraph is justified. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen.  </p>  \n      <h3>Table:</h3> \n      <table>\n        <tr>\n          <td class=\"border-left\">Border Left</td>\n          <td class=\"border-right\">Border Right</td>\n          <td class=\"border-top\">Border Top</td>\n          <td class=\"border-bottom\">Border Bottom</td>\n        </tr>\n      </table>\n      <h3>List:</h3> \n      <ol class=\"arabic\">\n        <li>arabic (Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol class=\"little-roman\">\n        <li>little-roman (Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol class=\"big-roman\">\n        <li>big-roman (Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol class=\"little-alpha\">\n        <li>little-alpha (Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol class=\"big-alpha\">\n        <li>big-alpha (Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ul class=\"unlist\">\n        <li>unlist (Item 1)</li>\n        <li>Item Two</li>\n      </ul>\n      <ul class=\"disc\">\n        <li>disc (Item 1)</li>\n        <li>Item Two</li>\n      </ul>\n      <ul class=\"circle\">\n        <li>circle (Item 1)</li>\n        <li>Item Two</li>\n      </ul>\n      <ul class=\"square\">\n        <li>square (Item 1)</li>\n        <li>Item Two</li>\n      </ul>\n      <h2>Internal Styles</h2>\n      <p>Example Text: <span style=\"font-weight: bold\">bold</span>, <span style=\"font-style: italics\">italics</span>, <span style=\"text-decoration: underline\">underline</span> \n        and <span style=\"text-decoration: line-through\">strikethrough</span>. \n        Font-Family <span style=\"font-family: serif\">Serif</span> and <span style=\"font-family: sans-serif\">Sans Serif</span>, \n        Font-size <span style=\"font-size: 50%\">50%</span> <span style=\"font-size: 80%\">80%</span> <span style=\"font-size: 150%\">150%</span>, \n        Font-Color  <span style=\"color: navy\">Navy</span> <span style=\"color: maroon\">Maroon</span> <span style=\"color: brown\">Brown</span>,\n        Background-color <span style=\"background-color: aqua\">Aqua</span> <span style=\"color: silver\">Silver</span> <span style=\"color: pink\">Pink</span>.\n       </p>\n       <p>\n         Whitespace Control:\n       </p>\n       <p style=\"white-space: normal\">Normal    Whitespace\n          Test, long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long sentence</p>\n       <p style=\"white-space: nowrap\">No-Wrap    Whitespace\n          Test, long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long sentence</p>\n       <p style=\"white-space: pre\">Pre    Whitespace\n          Test, long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long sentence</p>\n       <p style=\"white-space: pre-line\">Pre-Line    Whitespace\n          Test, long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long sentence</p>\n       <p style=\"white-space: pre-wrap\">Pre-Wrap    Whitespace\n          Test, long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long sentence</p>\n        \n      <p style=\"text-align: left\">This paragraph is left aligned. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. The content should be laid out aligned at the left of the screen. </p>  \n      <p style=\"text-align: right\">This paragraph is right aligned. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. The content should be laid out aligned at the right of the screen. </p>  \n      <p style=\"text-align: center\">This paragraph is center aligned. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. The content should be laid out aligned at the center of the screen. </p>  \n      <p style=\"text-align: justify\">This paragraph is justified. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen. The content should be laid out aligned at both the left and right of the screen.  </p>  \n      \n      <ol style=\"list-style-type: armenian\">\n        <li>armenian (Item 1)</li>\n        <li>Item Two</li>\n      </ol>      \t\n      <ol style=\"list-style-type: cjk-ideographic\">\n        <li>cjk-ideographic\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: decimal\">\n        <li>decimal\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: decimal-leading-zero\">\n        <li>decimal-leading-zero\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: georgian\">\n        <li>georgian\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: hebrew\">\n        <li>hebrew\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: hiragana\">\n        <li>hiragana\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: hiragana-iroha\">\n        <li>hiragana-iroha\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: inherit\">\n        <li>inherit\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: katakana\">\n        <li>katakana\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: katakana-iroha\">\n        <li>katakana-iroha\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: lower-alpha\">\n        <li>lower-alpha\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: lower-greek\">\n        <li>lower-greek\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: lower-latin\">\n        <li>lower-latin\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: lower-roman\">\n        <li>lower-roman\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: none\">\n        <li>none\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: upper-alpha\">\n        <li>upper-alpha\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: upper-latin\">\n        <li>upper-latin\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: upper-roman\">\n        <li>upper-roman\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      <ol style=\"list-style-type: upper-roman\">\n        <li>upper-roman\t(Item 1)</li>\n        <li>Item Two</li>\n      </ol>\n      \n    </div>"
          },
          "code": {
           "text": "Example Narrative Tester"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "basic-example.json": {
         "value": {
          "resourceType": "Basic",
          "id": "referral",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <p><b>Patient:</b>Roel</p>\n      <p><b>Requestor:</b>Dokter Bronsig</p>\n      <p><b>Type:</b>Consultation</p>\n      <p><b>Target Date:</b>April 1 - April 31</p>\n      <p>COMPLETED</p>\n      <b>The patient had fever peaks over the last couple of days. He is worried about these peaks.</b>\n    </div>"
          },
          "extension": [
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#requestingPractitioner",
            "valueReference": {
             "reference": "Practitioner/f201",
             "display": "Dokter Bronsig"
            }
           },
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#notes",
            "valueString": "The patient had fever peaks over the last couple of days. He is worried about these peaks."
           },
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#fulfillingEncounter",
            "valueReference": {
             "reference": "Encounter/f201"
            }
           }
          ],
          "modifierExtension": [
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#referredForService",
            "valueCodeableConcept": {
             "coding": [
              {
               "system": "http://snomed.info/sct",
               "code": "11429006",
               "display": "Consultation"
              }
             ]
            }
           },
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#targetDate",
            "valuePeriod": {
             "start": "2013-04-01",
             "end": "2013-04-15"
            }
           },
           {
            "url": "http://example.org/do-not-use/fhir-extensions/referral#status",
            "valueCode": "complete"
           }
          ],
          "identifier": [
           {
            "system": "http://goodhealth.org/basic/identifiers",
            "value": "19283746"
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/basic-resource-type",
             "code": "referral"
            }
           ]
          },
          "subject": {
           "reference": "Patient/f201",
           "display": "Roel"
          },
          "created": "2013-05-14",
          "author": {
           "reference": "Practitioner/example"
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        },
        "basic-example2.json": {
         "value": {
          "resourceType": "Basic",
          "id": "classModel",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n      <p><b>Class1</b></p>\n      <ul>\n        <li>Attribute1: 1..*</li>\n        <li>Attribute2: 0..1</li>\n      </ul>\n    </div>"
          },
          "extension": [
           {
            "url": "http://example.org/do-not-use/fhir-extensions/UMLclass",
            "extension": [
             {
              "url": "name",
              "valueString": "Class1"
             },
             {
              "url": "attribute",
              "extension": [
               {
                "url": "name",
                "valueString": "attribute1"
               },
               {
                "url": "minOccurs",
                "valueInteger": 1
               },
               {
                "url": "maxOccurs",
                "valueCode": "*"
               }
              ]
             },
             {
              "url": "attribute",
              "extension": [
               {
                "url": "name",
                "valueString": "attribute2"
               },
               {
                "url": "minOccurs",
                "valueInteger": 0
               },
               {
                "url": "maxOccurs",
                "valueInteger": 1
               }
              ]
             }
            ]
           }
          ],
          "code": {
           "coding": [
            {
             "system": "http://example.org/do-not-use/fhir-codes#resourceTypes",
             "code": "UMLCLASSMODEL"
            }
           ]
          },
          "meta": {
           "tag": [
            {
             "system": "http://terminology.hl7.org/CodeSystem/v3-ActReason",
             "code": "HTEST",
             "display": "test health data"
            }
           ]
          }
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "Basic"
    ],
    "parameters": [
     {
      "name": "author",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Who created"
     },
     {
      "name": "code",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": ""
     },
     {
      "name": "created",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "When created"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "patient",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "subject",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The entity that caused the expenses"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Basic"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Basic/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "Basic"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Basic"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "Basic"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/Basic"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "Basic"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/Basic/{id}/_history": {
   "get": {
    "tags": [
     "Basic"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/Basic"
         }
        }
       }
      }
     }
    }
   }
  },
  "/Basic/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "Basic"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/Basic"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "Basic"
  }
 ]
}