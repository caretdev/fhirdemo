{
 "info": {
  "description": "Structural Definition",
  "title": "FHIR R4 StructureDefinition Resource",
  "version": "r4"
 },
 "openapi": "3.0.1",
 "servers": [
  {
   "url": "/fhir/r4"
  }
 ],
 "components": {
  "schemas": {
   "StructureDefinition": {
    "description": "Structural Definition",
    "type": "object",
    "properties": {
     "abstract": {
      "type": "boolean",
      "description": "Whether the structure is abstract"
     },
     "baseDefinition": {
      "type": "string",
      "description": "Definition that this type is constrained/specialized from"
     },
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details for the publisher"
     },
     "contained": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Resource"
      },
      "description": "Contained, inline Resources"
     },
     "context": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/StructureDefinition.context"
      },
      "description": "If an extension, where it can be used in instances"
     },
     "contextInvariant": {
      "type": "string",
      "description": "FHIRPath invariants - when the extension can be used"
     },
     "copyright": {
      "type": "string",
      "description": "Use and/or publishing restrictions"
     },
     "date": {
      "type": "string",
      "description": "Date last changed"
     },
     "derivation": {
      "type": "string",
      "description": "specialization | constraint - How relates to base definition"
     },
     "description": {
      "type": "string",
      "description": "Natural language description of the structure definition"
     },
     "differential": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/StructureDefinition.differential"
       }
      ],
      "description": "Differential view of the structure"
     },
     "experimental": {
      "type": "boolean",
      "description": "For testing purposes, not real usage"
     },
     "fhirVersion": {
      "type": "string",
      "description": "FHIR Version this StructureDefinition targets"
     },
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "identifier": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Identifier"
      },
      "description": "Additional identifier for the structure definition"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "jurisdiction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": "Intended jurisdiction for structure definition (if applicable)"
     },
     "keyword": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Assist with indexing and finding"
     },
     "kind": {
      "type": "string",
      "description": "primitive-type | complex-type | resource | logical"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "mapping": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/StructureDefinition.mapping"
      },
      "description": "External specification that the content is mapped to"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     },
     "name": {
      "type": "string",
      "description": "Name for this structure definition (computer friendly)"
     },
     "publisher": {
      "type": "string",
      "description": "Name of the publisher (organization or individual)"
     },
     "purpose": {
      "type": "string",
      "description": "Why this structure definition is defined"
     },
     "snapshot": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/StructureDefinition.snapshot"
       }
      ],
      "description": "Snapshot view of the structure"
     },
     "status": {
      "type": "string",
      "description": "draft | active | retired | unknown"
     },
     "text": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Narrative"
       }
      ],
      "description": "Text summary of the resource, for human interpretation"
     },
     "title": {
      "type": "string",
      "description": "Name for this structure definition (human friendly)"
     },
     "type": {
      "type": "string",
      "description": "Type defined or constrained by this structure"
     },
     "url": {
      "type": "string",
      "description": "Canonical identifier for this structure definition, represented as a URI (globally unique)"
     },
     "useContext": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/UsageContext"
      },
      "description": "The context that the content is intended to support"
     },
     "version": {
      "type": "string",
      "description": "Business version of the structure definition"
     }
    },
    "required": [
     "id"
    ]
   },
   "StructureDefinition.context": {
    "description": "",
    "type": "object",
    "properties": {
     "expression": {
      "type": "string",
      "description": "Where the extension can be used in instances"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "type": {
      "type": "string",
      "description": "fhirpath | element | extension"
     }
    },
    "required": [
     "id"
    ]
   },
   "StructureDefinition.differential": {
    "description": "",
    "type": "object",
    "properties": {
     "element": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition"
      },
      "description": "Definition of elements in the resource (if no StructureDefinition)"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     }
    },
    "required": [
     "id"
    ]
   },
   "StructureDefinition.mapping": {
    "description": "",
    "type": "object",
    "properties": {
     "comment": {
      "type": "string",
      "description": "Versions, Issues, Scope limitations etc."
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "identity": {
      "type": "string",
      "description": "Internal id when this mapping is used"
     },
     "name": {
      "type": "string",
      "description": "Names what this mapping refers to"
     },
     "uri": {
      "type": "string",
      "description": "Identifies what this mapping refers to"
     }
    },
    "required": [
     "id"
    ]
   },
   "StructureDefinition.snapshot": {
    "description": "",
    "type": "object",
    "properties": {
     "element": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition"
      },
      "description": "Definition of elements in the resource (if no StructureDefinition)"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactDetail": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name of an individual to contact"
     },
     "telecom": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactPoint"
      },
      "description": "Contact details for individual or organization"
     }
    },
    "required": [
     "id"
    ]
   },
   "Resource": {
    "description": "Base Resource",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": "Logical id of this artifact"
     },
     "implicitRules": {
      "type": "string",
      "description": "A set of rules under which this content was created"
     },
     "language": {
      "type": "string",
      "description": "Language of the resource content"
     },
     "meta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": "Metadata about the resource"
     }
    },
    "required": [
     "id"
    ]
   },
   "Extension": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "url": {
      "type": "string",
      "description": "identifies the meaning of the extension"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Identifier": {
    "description": "",
    "type": "object",
    "properties": {
     "assigner": {
      "type": "string",
      "description": "Organization that issued id (may be just text)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when id is/was valid for use"
     },
     "system": {
      "type": "string",
      "description": "The namespace for the identifier value"
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "Description of identifier"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | secondary | old (If known)"
     },
     "value": {
      "type": "string",
      "description": "The value that is unique"
     }
    },
    "required": [
     "id"
    ]
   },
   "CodeableConcept": {
    "description": "",
    "type": "object",
    "properties": {
     "coding": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Code defined by a terminology system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "Plain text representation of the concept"
     }
    },
    "required": [
     "id"
    ]
   },
   "Coding": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Symbol in syntax defined by the system"
     },
     "display": {
      "type": "string",
      "description": "Representation defined by the system"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": "Identity of the terminology system"
     },
     "userSelected": {
      "type": "boolean",
      "description": "If this coding was chosen directly by the user"
     },
     "version": {
      "type": "string",
      "description": "Version of the system - if relevant"
     }
    },
    "required": [
     "id"
    ]
   },
   "Meta": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "lastUpdated": {
      "type": "string",
      "description": "When the resource version last changed"
     },
     "profile": {
      "type": "string",
      "description": "Profiles this resource claims to conform to"
     },
     "security": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Security Labels applied to this resource"
     },
     "source": {
      "type": "string",
      "description": "Identifies where the resource comes from"
     },
     "tag": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Tags applied to this resource"
     },
     "versionId": {
      "type": "string",
      "description": "Version specific identifier"
     }
    },
    "required": [
     "id"
    ]
   },
   "Narrative": {
    "description": "",
    "type": "object",
    "properties": {
     "div": {
      "description": "Limited xhtml content"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "status": {
      "type": "string",
      "description": "generated | extensions | additional | empty"
     }
    },
    "required": [
     "id"
    ]
   },
   "UsageContext": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": "Type of context being specified"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Period": {
    "description": "",
    "type": "object",
    "properties": {
     "end": {
      "type": "string",
      "description": "End time with inclusive boundary, if not ongoing"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "start": {
      "type": "string",
      "description": "Starting time with inclusive boundary"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "alias": {
      "type": "string",
      "description": ""
     },
     "base": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ElementDefinition.base"
       }
      ],
      "description": ""
     },
     "binding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ElementDefinition.binding"
       }
      ],
      "description": ""
     },
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": ""
     },
     "comment": {
      "type": "string",
      "description": ""
     },
     "condition": {
      "type": "string",
      "description": ""
     },
     "constraint": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition.constraint"
      },
      "description": ""
     },
     "contentReference": {
      "type": "string",
      "description": ""
     },
     "defaultValue": {
      "description": ""
     },
     "defaultValueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "defaultValueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "defaultValueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "defaultValueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "defaultValueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "defaultValueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "defaultValueCanonical": {
      "type": "string",
      "description": ""
     },
     "defaultValueCode": {
      "type": "string",
      "description": ""
     },
     "defaultValueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "defaultValueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "defaultValueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "defaultValueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "defaultValueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "defaultValueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "defaultValueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "defaultValueDate": {
      "type": "string",
      "description": ""
     },
     "defaultValueDateTime": {
      "type": "string",
      "description": ""
     },
     "defaultValueDecimal": {
      "type": "number",
      "description": ""
     },
     "defaultValueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "defaultValueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "defaultValueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "defaultValueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "defaultValueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "defaultValueId": {
      "type": "string",
      "description": ""
     },
     "defaultValueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "defaultValueInstant": {
      "type": "string",
      "description": ""
     },
     "defaultValueInteger": {
      "type": "number",
      "description": ""
     },
     "defaultValueMarkdown": {
      "type": "string",
      "description": ""
     },
     "defaultValueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "defaultValueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "defaultValueOid": {
      "type": "string",
      "description": ""
     },
     "defaultValueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "defaultValuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "defaultValuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "defaultValueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "defaultValueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "defaultValueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "defaultValueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "defaultValueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "defaultValueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "defaultValueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "defaultValueString": {
      "type": "string",
      "description": ""
     },
     "defaultValueTime": {
      "type": "string",
      "description": ""
     },
     "defaultValueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "defaultValueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "defaultValueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "defaultValueUri": {
      "type": "string",
      "description": ""
     },
     "defaultValueUrl": {
      "type": "string",
      "description": ""
     },
     "defaultValueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "defaultValueUuid": {
      "type": "string",
      "description": ""
     },
     "definition": {
      "type": "string",
      "description": ""
     },
     "example": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition.example"
      },
      "description": ""
     },
     "fixed": {
      "description": ""
     },
     "fixedAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "fixedAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "fixedAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "fixedAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "fixedBase64Binary": {
      "type": "string",
      "description": ""
     },
     "fixedBoolean": {
      "type": "boolean",
      "description": ""
     },
     "fixedCanonical": {
      "type": "string",
      "description": ""
     },
     "fixedCode": {
      "type": "string",
      "description": ""
     },
     "fixedCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "fixedCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "fixedContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "fixedContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "fixedContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "fixedCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "fixedDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "fixedDate": {
      "type": "string",
      "description": ""
     },
     "fixedDateTime": {
      "type": "string",
      "description": ""
     },
     "fixedDecimal": {
      "type": "number",
      "description": ""
     },
     "fixedDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "fixedDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "fixedDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "fixedExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "fixedHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "fixedId": {
      "type": "string",
      "description": ""
     },
     "fixedIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "fixedInstant": {
      "type": "string",
      "description": ""
     },
     "fixedInteger": {
      "type": "number",
      "description": ""
     },
     "fixedMarkdown": {
      "type": "string",
      "description": ""
     },
     "fixedMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "fixedMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "fixedOid": {
      "type": "string",
      "description": ""
     },
     "fixedParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "fixedPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "fixedPositiveInt": {
      "type": "number",
      "description": ""
     },
     "fixedQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "fixedRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "fixedRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "fixedReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "fixedRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "fixedSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "fixedSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "fixedString": {
      "type": "string",
      "description": ""
     },
     "fixedTime": {
      "type": "string",
      "description": ""
     },
     "fixedTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "fixedTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "fixedUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "fixedUri": {
      "type": "string",
      "description": ""
     },
     "fixedUrl": {
      "type": "string",
      "description": ""
     },
     "fixedUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "fixedUuid": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "isModifier": {
      "type": "boolean",
      "description": ""
     },
     "isModifierReason": {
      "type": "string",
      "description": ""
     },
     "isSummary": {
      "type": "boolean",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": ""
     },
     "mapping": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition.mapping"
      },
      "description": ""
     },
     "max": {
      "type": "string",
      "description": ""
     },
     "maxLength": {
      "type": "number",
      "description": ""
     },
     "maxValue": {
      "description": ""
     },
     "maxValueDate": {
      "type": "string",
      "description": ""
     },
     "maxValueDateTime": {
      "type": "string",
      "description": ""
     },
     "maxValueDecimal": {
      "type": "number",
      "description": ""
     },
     "maxValueInstant": {
      "type": "string",
      "description": ""
     },
     "maxValueInteger": {
      "type": "number",
      "description": ""
     },
     "maxValuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "maxValueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxValueTime": {
      "type": "string",
      "description": ""
     },
     "maxValueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "meaningWhenMissing": {
      "type": "string",
      "description": ""
     },
     "min": {
      "type": "number",
      "description": ""
     },
     "minValue": {
      "description": ""
     },
     "minValueDate": {
      "type": "string",
      "description": ""
     },
     "minValueDateTime": {
      "type": "string",
      "description": ""
     },
     "minValueDecimal": {
      "type": "number",
      "description": ""
     },
     "minValueInstant": {
      "type": "string",
      "description": ""
     },
     "minValueInteger": {
      "type": "number",
      "description": ""
     },
     "minValuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "minValueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "minValueTime": {
      "type": "string",
      "description": ""
     },
     "minValueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "mustSupport": {
      "type": "boolean",
      "description": ""
     },
     "orderMeaning": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": ""
     },
     "pattern": {
      "description": ""
     },
     "patternAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "patternAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "patternAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "patternAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "patternBase64Binary": {
      "type": "string",
      "description": ""
     },
     "patternBoolean": {
      "type": "boolean",
      "description": ""
     },
     "patternCanonical": {
      "type": "string",
      "description": ""
     },
     "patternCode": {
      "type": "string",
      "description": ""
     },
     "patternCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patternCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "patternContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "patternContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "patternContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "patternCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "patternDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "patternDate": {
      "type": "string",
      "description": ""
     },
     "patternDateTime": {
      "type": "string",
      "description": ""
     },
     "patternDecimal": {
      "type": "number",
      "description": ""
     },
     "patternDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "patternDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "patternDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "patternExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "patternHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "patternId": {
      "type": "string",
      "description": ""
     },
     "patternIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "patternInstant": {
      "type": "string",
      "description": ""
     },
     "patternInteger": {
      "type": "number",
      "description": ""
     },
     "patternMarkdown": {
      "type": "string",
      "description": ""
     },
     "patternMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "patternMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "patternOid": {
      "type": "string",
      "description": ""
     },
     "patternParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "patternPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "patternPositiveInt": {
      "type": "number",
      "description": ""
     },
     "patternQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "patternRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "patternRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "patternReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "patternRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "patternSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "patternSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "patternString": {
      "type": "string",
      "description": ""
     },
     "patternTime": {
      "type": "string",
      "description": ""
     },
     "patternTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "patternTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "patternUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "patternUri": {
      "type": "string",
      "description": ""
     },
     "patternUrl": {
      "type": "string",
      "description": ""
     },
     "patternUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "patternUuid": {
      "type": "string",
      "description": ""
     },
     "representation": {
      "type": "string",
      "description": ""
     },
     "requirements": {
      "type": "string",
      "description": ""
     },
     "short": {
      "type": "string",
      "description": ""
     },
     "sliceIsConstraining": {
      "type": "boolean",
      "description": ""
     },
     "sliceName": {
      "type": "string",
      "description": ""
     },
     "slicing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ElementDefinition.slicing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition.type"
      },
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "ContactPoint": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when the contact point was/is in use"
     },
     "rank": {
      "type": "number",
      "description": "Specify preferred order of use (1 = highest)"
     },
     "system": {
      "type": "string",
      "description": "phone | fax | email | pager | url | sms | other"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | mobile - purpose of this contact point"
     },
     "value": {
      "type": "string",
      "description": "The actual contact point details"
     }
    },
    "required": [
     "id"
    ]
   },
   "Address": {
    "description": "",
    "type": "object",
    "properties": {
     "city": {
      "type": "string",
      "description": "Name of city, town etc."
     },
     "country": {
      "type": "string",
      "description": "Country (e.g. can be ISO 3166 2 or 3 letter code)"
     },
     "district": {
      "type": "string",
      "description": "District name (aka county)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "line": {
      "type": "string",
      "description": "Street name, number, direction & P.O. Box etc."
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when address was/is in use"
     },
     "postalCode": {
      "type": "string",
      "description": "Postal code for area"
     },
     "state": {
      "type": "string",
      "description": "Sub-unit of country (abbreviations ok)"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the address"
     },
     "type": {
      "type": "string",
      "description": "postal | physical | both"
     },
     "use": {
      "type": "string",
      "description": "home | work | temp | old | billing - purpose of this address"
     }
    },
    "required": [
     "id"
    ]
   },
   "Age": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Annotation": {
    "description": "",
    "type": "object",
    "properties": {
     "author": {
      "description": ""
     },
     "authorReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "authorString": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "text": {
      "type": "string",
      "description": "The annotation  - text content (as markdown)"
     },
     "time": {
      "type": "string",
      "description": "When the annotation was made"
     }
    },
    "required": [
     "id"
    ]
   },
   "Attachment": {
    "description": "",
    "type": "object",
    "properties": {
     "contentType": {
      "type": "string",
      "description": "Mime type of the content, with charset etc."
     },
     "creation": {
      "type": "string",
      "description": "Date attachment was first created"
     },
     "data": {
      "type": "string",
      "description": "Data inline, base64ed"
     },
     "hash": {
      "type": "string",
      "description": "Hash of the data (sha-1, base64ed)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "Human language of the content (BCP-47)"
     },
     "size": {
      "type": "number",
      "description": "Number of bytes of content (if url provided)"
     },
     "title": {
      "type": "string",
      "description": "Label to display in place of the data"
     },
     "url": {
      "type": "string",
      "description": "Uri where the data can be found"
     }
    },
    "required": [
     "id"
    ]
   },
   "Contributor": {
    "description": "",
    "type": "object",
    "properties": {
     "contact": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ContactDetail"
      },
      "description": "Contact details of the contributor"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Who contributed the content"
     },
     "type": {
      "type": "string",
      "description": "author | editor | reviewer | endorser"
     }
    },
    "required": [
     "id"
    ]
   },
   "Count": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement": {
    "description": "",
    "type": "object",
    "properties": {
     "codeFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.codeFilter"
      },
      "description": ""
     },
     "dateFilter": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.dateFilter"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "limit": {
      "type": "number",
      "description": "Number of results"
     },
     "mustSupport": {
      "type": "string",
      "description": "Indicates specific structure elements that are referenced by the knowledge module"
     },
     "profile": {
      "type": "string",
      "description": "The profile of the required data"
     },
     "sort": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement.sort"
      },
      "description": ""
     },
     "subject": {
      "description": ""
     },
     "subjectCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "subjectReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "The type of the required data"
     }
    },
    "required": [
     "id"
    ]
   },
   "Distance": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage": {
    "description": "",
    "type": "object",
    "properties": {
     "additionalInstruction": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/CodeableConcept"
      },
      "description": ""
     },
     "asNeeded": {
      "description": ""
     },
     "asNeededBoolean": {
      "type": "boolean",
      "description": ""
     },
     "asNeededCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "doseAndRate": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Dosage.doseAndRate"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "maxDosePerAdministration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerLifetime": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "maxDosePerPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "method": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "patientInstruction": {
      "type": "string",
      "description": ""
     },
     "route": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "sequence": {
      "type": "number",
      "description": ""
     },
     "site": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "text": {
      "type": "string",
      "description": ""
     },
     "timing": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Duration": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": ""
     },
     "comparator": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "system": {
      "type": "string",
      "description": ""
     },
     "unit": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "Expression": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Natural language description of the condition"
     },
     "expression": {
      "type": "string",
      "description": "Expression in specified language"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "language": {
      "type": "string",
      "description": "text/cql | text/fhirpath | application/x-fhir-query | etc."
     },
     "name": {
      "type": "string",
      "description": "Short name assigned to expression for reuse"
     },
     "reference": {
      "type": "string",
      "description": "Where the expression is found"
     }
    },
    "required": [
     "id"
    ]
   },
   "HumanName": {
    "description": "",
    "type": "object",
    "properties": {
     "family": {
      "type": "string",
      "description": "Family name (often called 'Surname')"
     },
     "given": {
      "type": "string",
      "description": "Given names (not always 'first'). Includes middle names"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "period": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": "Time period when name was/is in use"
     },
     "prefix": {
      "type": "string",
      "description": "Parts that come before the name"
     },
     "suffix": {
      "type": "string",
      "description": "Parts that come after the name"
     },
     "text": {
      "type": "string",
      "description": "Text representation of the full name"
     },
     "use": {
      "type": "string",
      "description": "usual | official | temp | nickname | anonymous | old | maiden"
     }
    },
    "required": [
     "id"
    ]
   },
   "Money": {
    "description": "",
    "type": "object",
    "properties": {
     "currency": {
      "type": "string",
      "description": "ISO 4217 Currency Code"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "ParameterDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "documentation": {
      "type": "string",
      "description": "A brief description of the parameter"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Maximum cardinality (a number of *)"
     },
     "min": {
      "type": "number",
      "description": "Minimum cardinality"
     },
     "name": {
      "type": "string",
      "description": "Name used to access the parameter value"
     },
     "profile": {
      "type": "string",
      "description": "What profile the value is expected to be"
     },
     "type": {
      "type": "string",
      "description": "What type of value"
     },
     "use": {
      "type": "string",
      "description": "in | out"
     }
    },
    "required": [
     "id"
    ]
   },
   "Quantity": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "string",
      "description": "Coded form of the unit"
     },
     "comparator": {
      "type": "string",
      "description": "< | <= | >= | > - how to understand the value"
     },
     "id": {
      "type": "string",
      "description": "Unique id for inter-element referencing"
     },
     "system": {
      "type": "string",
      "description": "System that defines coded unit form"
     },
     "unit": {
      "type": "string",
      "description": "Unit representation"
     },
     "value": {
      "type": "number",
      "description": "Numerical value (with implicit precision)"
     }
    },
    "required": [
     "id"
    ]
   },
   "Range": {
    "description": "",
    "type": "object",
    "properties": {
     "high": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "High limit"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "low": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Low limit"
     }
    },
    "required": [
     "id"
    ]
   },
   "Ratio": {
    "description": "",
    "type": "object",
    "properties": {
     "denominator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Denominator value"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "numerator": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Numerator value"
     }
    },
    "required": [
     "id"
    ]
   },
   "Reference": {
    "description": "",
    "type": "object",
    "properties": {
     "display": {
      "type": "string",
      "description": "Text alternative for the resource"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": "Logical reference, when literal reference is not known"
     },
     "reference": {
      "type": "string",
      "description": "Literal reference, Relative, internal or absolute URL"
     },
     "type": {
      "type": "string",
      "description": "Type the reference refers to (e.g. \"Patient\")"
     }
    },
    "required": [
     "id"
    ]
   },
   "RelatedArtifact": {
    "description": "",
    "type": "object",
    "properties": {
     "citation": {
      "type": "string",
      "description": "Bibliographic citation for the artifact"
     },
     "display": {
      "type": "string",
      "description": "Brief description of the related artifact"
     },
     "document": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": "What document is being referenced"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Short label"
     },
     "resource": {
      "type": "string",
      "description": "What resource is being referenced"
     },
     "type": {
      "type": "string",
      "description": "documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of"
     },
     "url": {
      "type": "string",
      "description": "Where the artifact can be accessed"
     }
    },
    "required": [
     "id"
    ]
   },
   "SampledData": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "Decimal values with spaces, or \"E\" | \"U\" | \"L\""
     },
     "dimensions": {
      "type": "number",
      "description": "Number of sample points at each time point"
     },
     "factor": {
      "type": "number",
      "description": "Multiply data by this before adding to origin"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "lowerLimit": {
      "type": "number",
      "description": "Lower limit of detection"
     },
     "origin": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": "Zero value and units"
     },
     "period": {
      "type": "number",
      "description": "Number of milliseconds between samples"
     },
     "upperLimit": {
      "type": "number",
      "description": "Upper limit of detection"
     }
    },
    "required": [
     "id"
    ]
   },
   "Signature": {
    "description": "",
    "type": "object",
    "properties": {
     "data": {
      "type": "string",
      "description": "The actual signature content (XML DigSig. JWS, picture, etc.)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "onBehalfOf": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "The party represented"
     },
     "sigFormat": {
      "type": "string",
      "description": "The technical format of the signature"
     },
     "targetFormat": {
      "type": "string",
      "description": "The technical format of the signed resources"
     },
     "type": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "Indication of the reason the entity signed the object(s)"
     },
     "when": {
      "type": "string",
      "description": "When the signature was created"
     },
     "who": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": "Who signed"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "event": {
      "type": "string",
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "repeat": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing.repeat"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "TriggerDefinition": {
    "description": "",
    "type": "object",
    "properties": {
     "condition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": "Whether the event triggers (boolean expression)"
     },
     "data": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/DataRequirement"
      },
      "description": "Triggering data of the event (multiple = 'and')"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "name": {
      "type": "string",
      "description": "Name or URI that identifies the event"
     },
     "timing": {
      "description": ""
     },
     "timingDate": {
      "type": "string",
      "description": ""
     },
     "timingDateTime": {
      "type": "string",
      "description": ""
     },
     "timingReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "timingTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "string",
      "description": "named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.base": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "max": {
      "type": "string",
      "description": "Max cardinality of the base element"
     },
     "min": {
      "type": "number",
      "description": "Min cardinality of the base element"
     },
     "path": {
      "type": "string",
      "description": "Path that identifies the base element"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.binding": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Human explanation of the value set"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "strength": {
      "type": "string",
      "description": "required | extensible | preferred | example"
     },
     "valueSet": {
      "type": "string",
      "description": "Source of value set"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.constraint": {
    "description": "",
    "type": "object",
    "properties": {
     "expression": {
      "type": "string",
      "description": "FHIRPath expression of constraint"
     },
     "human": {
      "type": "string",
      "description": "Human description of constraint"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "key": {
      "type": "string",
      "description": "Target of 'condition' reference above"
     },
     "requirements": {
      "type": "string",
      "description": "Why this constraint is necessary or appropriate"
     },
     "severity": {
      "type": "string",
      "description": "error | warning"
     },
     "source": {
      "type": "string",
      "description": "Reference to original source of constraint"
     },
     "xpath": {
      "type": "string",
      "description": "XPath expression of constraint"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.example": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "label": {
      "type": "string",
      "description": "Describes the purpose of this example"
     },
     "value": {
      "description": ""
     },
     "valueAddress": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Address"
       }
      ],
      "description": ""
     },
     "valueAge": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Age"
       }
      ],
      "description": ""
     },
     "valueAnnotation": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Annotation"
       }
      ],
      "description": ""
     },
     "valueAttachment": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Attachment"
       }
      ],
      "description": ""
     },
     "valueBase64Binary": {
      "type": "string",
      "description": ""
     },
     "valueBoolean": {
      "type": "boolean",
      "description": ""
     },
     "valueCanonical": {
      "type": "string",
      "description": ""
     },
     "valueCode": {
      "type": "string",
      "description": ""
     },
     "valueCodeableConcept": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": ""
     },
     "valueCoding": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Coding"
       }
      ],
      "description": ""
     },
     "valueContactDetail": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactDetail"
       }
      ],
      "description": ""
     },
     "valueContactPoint": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ContactPoint"
       }
      ],
      "description": ""
     },
     "valueContributor": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Contributor"
       }
      ],
      "description": ""
     },
     "valueCount": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Count"
       }
      ],
      "description": ""
     },
     "valueDataRequirement": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/DataRequirement"
       }
      ],
      "description": ""
     },
     "valueDate": {
      "type": "string",
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDecimal": {
      "type": "number",
      "description": ""
     },
     "valueDistance": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Distance"
       }
      ],
      "description": ""
     },
     "valueDosage": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Dosage"
       }
      ],
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valueExpression": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Expression"
       }
      ],
      "description": ""
     },
     "valueHumanName": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/HumanName"
       }
      ],
      "description": ""
     },
     "valueId": {
      "type": "string",
      "description": ""
     },
     "valueIdentifier": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Identifier"
       }
      ],
      "description": ""
     },
     "valueInstant": {
      "type": "string",
      "description": ""
     },
     "valueInteger": {
      "type": "number",
      "description": ""
     },
     "valueMarkdown": {
      "type": "string",
      "description": ""
     },
     "valueMeta": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Meta"
       }
      ],
      "description": ""
     },
     "valueMoney": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Money"
       }
      ],
      "description": ""
     },
     "valueOid": {
      "type": "string",
      "description": ""
     },
     "valueParameterDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/ParameterDefinition"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "valuePositiveInt": {
      "type": "number",
      "description": ""
     },
     "valueQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "valueRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "valueRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "valueReference": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Reference"
       }
      ],
      "description": ""
     },
     "valueRelatedArtifact": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/RelatedArtifact"
       }
      ],
      "description": ""
     },
     "valueSampledData": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/SampledData"
       }
      ],
      "description": ""
     },
     "valueSignature": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Signature"
       }
      ],
      "description": ""
     },
     "valueString": {
      "type": "string",
      "description": ""
     },
     "valueTime": {
      "type": "string",
      "description": ""
     },
     "valueTiming": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Timing"
       }
      ],
      "description": ""
     },
     "valueTriggerDefinition": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/TriggerDefinition"
       }
      ],
      "description": ""
     },
     "valueUnsignedInt": {
      "type": "number",
      "description": ""
     },
     "valueUri": {
      "type": "string",
      "description": ""
     },
     "valueUrl": {
      "type": "string",
      "description": ""
     },
     "valueUsageContext": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/UsageContext"
       }
      ],
      "description": ""
     },
     "valueUuid": {
      "type": "string",
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.mapping": {
    "description": "",
    "type": "object",
    "properties": {
     "comment": {
      "type": "string",
      "description": "Comments about the mapping or its use"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "identity": {
      "type": "string",
      "description": "Reference to mapping declaration"
     },
     "language": {
      "type": "string",
      "description": "Computable language of mapping"
     },
     "map": {
      "type": "string",
      "description": "Details of the mapping"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.slicing": {
    "description": "",
    "type": "object",
    "properties": {
     "description": {
      "type": "string",
      "description": "Text description of how slicing works (or not)"
     },
     "discriminator": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/ElementDefinition.slicing.discriminator"
      },
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "ordered": {
      "type": "boolean",
      "description": "If elements must be in same order as slices"
     },
     "rules": {
      "type": "string",
      "description": "closed | open | openAtEnd"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.type": {
    "description": "",
    "type": "object",
    "properties": {
     "aggregation": {
      "type": "string",
      "description": "contained | referenced | bundled - how aggregated"
     },
     "code": {
      "type": "string",
      "description": "Data type or Resource (reference to definition)"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "profile": {
      "type": "string",
      "description": "Profiles (StructureDefinition or IG) - one must apply"
     },
     "targetProfile": {
      "type": "string",
      "description": "Profile (StructureDefinition or IG) on the Reference/canonical target - one must apply"
     },
     "versioning": {
      "type": "string",
      "description": "either | independent | specific"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.codeFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "code": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/Coding"
      },
      "description": "What code is expected"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A code-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A coded (token) parameter to search on"
     },
     "valueSet": {
      "type": "string",
      "description": "Valueset for the filter"
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.dateFilter": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "A date-valued attribute to filter on"
     },
     "searchParam": {
      "type": "string",
      "description": "A date valued parameter to search on"
     },
     "value": {
      "description": ""
     },
     "valueDateTime": {
      "type": "string",
      "description": ""
     },
     "valueDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "valuePeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     }
    },
    "required": [
     "id"
    ]
   },
   "DataRequirement.sort": {
    "description": "",
    "type": "object",
    "properties": {
     "direction": {
      "type": "string",
      "description": "ascending | descending"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "The name of the attribute to perform the sort"
     }
    },
    "required": [
     "id"
    ]
   },
   "Dosage.doseAndRate": {
    "description": "",
    "type": "object",
    "properties": {
     "dose": {
      "description": ""
     },
     "doseQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "doseRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "rate": {
      "description": ""
     },
     "rateQuantity": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Quantity"
       }
      ],
      "description": ""
     },
     "rateRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "rateRatio": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Ratio"
       }
      ],
      "description": ""
     },
     "type": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/CodeableConcept"
       }
      ],
      "description": "The kind of dose or rate specified"
     }
    },
    "required": [
     "id"
    ]
   },
   "Timing.repeat": {
    "description": "",
    "type": "object",
    "properties": {
     "bounds": {
      "description": ""
     },
     "boundsDuration": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Duration"
       }
      ],
      "description": ""
     },
     "boundsPeriod": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Period"
       }
      ],
      "description": ""
     },
     "boundsRange": {
      "type": "object",
      "allOf": [
       {
        "$ref": "#/components/schemas/Range"
       }
      ],
      "description": ""
     },
     "count": {
      "type": "number",
      "description": "Number of times to repeat"
     },
     "countMax": {
      "type": "number",
      "description": "Maximum number of times to repeat"
     },
     "dayOfWeek": {
      "type": "string",
      "description": "mon | tue | wed | thu | fri | sat | sun"
     },
     "duration": {
      "type": "number",
      "description": "How long when it happens"
     },
     "durationMax": {
      "type": "number",
      "description": "How long when it happens (Max)"
     },
     "durationUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "frequency": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "frequencyMax": {
      "type": "number",
      "description": "Event occurs up to frequencyMax times per period"
     },
     "id": {
      "type": "string",
      "description": ""
     },
     "offset": {
      "type": "number",
      "description": "Minutes from event (before or after)"
     },
     "period": {
      "type": "number",
      "description": "Event occurs frequency times per period"
     },
     "periodMax": {
      "type": "number",
      "description": "Upper limit of period (3-4 hours)"
     },
     "periodUnit": {
      "type": "string",
      "description": "s | min | h | d | wk | mo | a - unit of time (UCUM)"
     },
     "timeOfDay": {
      "type": "string",
      "description": "Time of day for action"
     },
     "when": {
      "type": "string",
      "description": "Code for time period of occurrence"
     }
    },
    "required": [
     "id"
    ]
   },
   "ElementDefinition.slicing.discriminator": {
    "description": "",
    "type": "object",
    "properties": {
     "id": {
      "type": "string",
      "description": ""
     },
     "path": {
      "type": "string",
      "description": "Path to element value"
     },
     "type": {
      "type": "string",
      "description": "value | exists | pattern | type | profile"
     }
    },
    "required": [
     "id"
    ]
   }
  }
 },
 "paths": {
  "/StructureDefinition": {
   "post": {
    "tags": [
     "StructureDefinition"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/StructureDefinition"
       },
       "examples": {
        "structuredefinition-example-composition.json": {
         "value": {
          "resourceType": "StructureDefinition",
          "id": "example-composition",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example-composition</p><p><b>url</b>: <b>http://hl7.org/fhir/StructureDefinition/example-composition</b></p><p><b>name</b>: DocumentStructure</p><p><b>title</b>: Document Structure (For testing section templates)</p><p><b>status</b>: active</p><p><b>experimental</b>: false</p><p><b>date</b>: 05/11/2018 5:47:00 PM</p><p><b>kind</b>: complex-type</p><p><b>abstract</b>: false</p><p><b>type</b>: <a>Composition</a></p><p><b>baseDefinition</b>: <a>http://hl7.org/fhir/StructureDefinition/Composition</a></p><p><b>derivation</b>: constraint</p><h3>Differentials</h3><table><tr><td>-</td><td><b>Element</b></td></tr><tr><td>*</td><td>todo-bundle</td></tr></table></div>"
          },
          "url": "http://hl7.org/fhir/StructureDefinition/example-composition",
          "name": "DocumentStructure",
          "title": "Document Structure (For testing section templates)",
          "status": "active",
          "experimental": false,
          "date": "2018-11-05T17:47:00+11:00",
          "kind": "complex-type",
          "abstract": false,
          "type": "Composition",
          "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Composition",
          "derivation": "constraint",
          "differential": {
           "element": [
            {
             "id": "Composition",
             "path": "Composition"
            },
            {
             "id": "Composition.section",
             "path": "Composition.section",
             "slicing": {
              "discriminator": [
               {
                "type": "pattern",
                "path": "code"
               }
              ],
              "description": "Slice by .section.code",
              "ordered": true,
              "rules": "closed"
             }
            },
            {
             "id": "Composition.section:procedure",
             "path": "Composition.section",
             "sliceName": "procedure",
             "min": 1,
             "type": [
              {
               "code": "BackboneElement",
               "profile": [
                "http://hl7.org/fhir/StructureDefinition/document-section-library"
               ],
               "_profile": [
                {
                 "extension": [
                  {
                   "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element",
                   "valueString": "Composition.section:procedure"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "id": "Composition.section:medications",
             "path": "Composition.section",
             "sliceName": "medications",
             "min": 1,
             "type": [
              {
               "code": "BackboneElement",
               "profile": [
                "http://hl7.org/fhir/StructureDefinition/document-section-library"
               ],
               "_profile": [
                {
                 "extension": [
                  {
                   "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element",
                   "valueString": "Composition.section:medications"
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "id": "Composition.section:plan",
             "path": "Composition.section",
             "sliceName": "plan",
             "min": 0,
             "type": [
              {
               "code": "BackboneElement",
               "profile": [
                "http://hl7.org/fhir/StructureDefinition/document-section-library"
               ],
               "_profile": [
                {
                 "extension": [
                  {
                   "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element",
                   "valueString": "Composition.section:plan"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         }
        },
        "structuredefinition-example-section-library.json": {
         "value": {
          "resourceType": "StructureDefinition",
          "id": "example-section-library",
          "text": {
           "status": "generated",
           "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative with Details</b></p><p><b>id</b>: example-section-library</p><p><b>url</b>: <b>http://hl7.org/fhir/StructureDefinition/example-section-library</b></p><p><b>name</b>: DocumentSectionLibrary</p><p><b>title</b>: Document Section Library (For testing section templates)</p><p><b>status</b>: active</p><p><b>experimental</b>: false</p><p><b>date</b>: 05/11/2018 5:57:00 PM</p><p><b>kind</b>: complex-type</p><p><b>abstract</b>: true</p><p><b>type</b>: <a>Composition</a></p><p><b>baseDefinition</b>: <a>http://hl7.org/fhir/StructureDefinition/Composition</a></p><p><b>derivation</b>: constraint</p><h3>Differentials</h3><table><tr><td>-</td><td><b>Element</b></td></tr><tr><td>*</td><td>todo-bundle</td></tr></table></div>"
          },
          "url": "http://hl7.org/fhir/StructureDefinition/example-section-library",
          "name": "DocumentSectionLibrary",
          "title": "Document Section Library (For testing section templates)",
          "status": "active",
          "experimental": false,
          "date": "2018-11-05T17:57:00+11:00",
          "kind": "complex-type",
          "abstract": true,
          "type": "Composition",
          "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Composition",
          "derivation": "constraint",
          "differential": {
           "element": [
            {
             "id": "Composition",
             "path": "Composition"
            },
            {
             "id": "Composition.section",
             "path": "Composition.section",
             "slicing": {
              "discriminator": [
               {
                "type": "pattern",
                "path": "code"
               }
              ],
              "description": "Slice by .section.code when using this library of sections",
              "ordered": true,
              "rules": "closed"
             }
            },
            {
             "id": "Composition.section:procedure",
             "path": "Composition.section",
             "sliceName": "procedure"
            },
            {
             "id": "Composition.section:procedure.title",
             "path": "Composition.section.title",
             "min": 1,
             "fixedString": "Procedures Performed"
            },
            {
             "id": "Composition.section:procedure.code",
             "path": "Composition.section.code",
             "min": 1,
             "patternCodeableConcept": {
              "coding": [
               {
                "system": "http://loinc.org",
                "code": "29554-3",
                "display": "Procedure Narrative"
               }
              ]
             }
            },
            {
             "id": "Composition.section:medications",
             "path": "Composition.section",
             "sliceName": "medications"
            },
            {
             "id": "Composition.section:medications.title",
             "path": "Composition.section.title",
             "min": 1,
             "fixedString": "Medications Administered"
            },
            {
             "id": "Composition.section:medications.code",
             "path": "Composition.section.code",
             "min": 1,
             "patternCodeableConcept": {
              "coding": [
               {
                "system": "http://loinc.org",
                "code": "29549-3",
                "display": "Medication administered Narrative"
               }
              ]
             }
            },
            {
             "id": "Composition.section:plan",
             "path": "Composition.section",
             "sliceName": "plan"
            },
            {
             "id": "Composition.section:plan.title",
             "path": "Composition.section.title",
             "min": 1,
             "fixedString": "Discharge Treatment Plan"
            },
            {
             "id": "Composition.section:plan.code",
             "path": "Composition.section.code",
             "min": 1,
             "patternCodeableConcept": {
              "coding": [
               {
                "system": "http://loinc.org",
                "code": "18776-5",
                "display": "Plan of treatment (narrative)"
               }
              ]
             }
            }
           ]
          }
         }
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "StructureDefinition"
    ],
    "parameters": [
     {
      "name": "abstract",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Whether the structure is abstract"
     },
     {
      "name": "base",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Marks this as a profile of the base"
     },
     {
      "name": "base-path",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Path that identifies the base element"
     },
     {
      "name": "context",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context assigned to the activity definition"
     },
     {
      "name": "context-quantity",
      "in": "query",
      "schema": {
       "type": "integer"
      },
      "description": "A quantity- or range-valued use context assigned to the activity definition"
     },
     {
      "name": "context-type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A type of use context assigned to the activity definition"
     },
     {
      "name": "context-type-quantity",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context type and quantity- or range-based value assigned to the activity definition"
     },
     {
      "name": "context-type-value",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A use context type and value assigned to the activity definition"
     },
     {
      "name": "date",
      "in": "query",
      "schema": {
       "type": "string",
       "format": "date"
      },
      "description": "The activity definition publication date"
     },
     {
      "name": "derivation",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "specialization | constraint - How relates to base definition"
     },
     {
      "name": "description",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The description of the activity definition"
     },
     {
      "name": "experimental",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "For testing purposes, not real usage"
     },
     {
      "name": "ext-context",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The system is the URL for the context-type: e.g. http://hl7.org/fhir/extension-context-type#element|CodeableConcept.text"
     },
     {
      "name": "identifier",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Account number"
     },
     {
      "name": "jurisdiction",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Intended jurisdiction for the activity definition"
     },
     {
      "name": "keyword",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Used to search for the study"
     },
     {
      "name": "kind",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "codesystem | identifier | root"
     },
     {
      "name": "name",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Human-readable label"
     },
     {
      "name": "path",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A path that is constrained in the StructureDefinition"
     },
     {
      "name": "publisher",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "Name of the publisher of the activity definition"
     },
     {
      "name": "status",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "active | inactive | entered-in-error | on-hold | unknown"
     },
     {
      "name": "title",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The human-friendly name of the activity definition"
     },
     {
      "name": "type",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "E.g. patient, expense, depreciation"
     },
     {
      "name": "url",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The uri that identifies the activity definition"
     },
     {
      "name": "valueset",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "A vocabulary binding reference"
     },
     {
      "name": "version",
      "in": "query",
      "schema": {
       "type": "string"
      },
      "description": "The business version of the activity definition"
     },
     {
      "name": "_format",
      "in": "query",
      "x-consoleDefault": "application/json",
      "schema": {
       "type": "string"
      },
      "description": ""
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/StructureDefinition"
         }
        }
       }
      }
     }
    }
   }
  },
  "/StructureDefinition/{id}": {
   "parameters": [
    {
     "in": "path",
     "required": true,
     "name": "id",
     "schema": {
      "type": "string"
     }
    }
   ],
   "get": {
    "tags": [
     "StructureDefinition"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/StructureDefinition"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "StructureDefinition"
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    },
    "requestBody": {
     "content": {
      "application/fhir+json": {
       "schema": {
        "$ref": "#/components/schemas/StructureDefinition"
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "StructureDefinition"
    ],
    "parameters": [],
    "responses": {
     "200": {
      "description": "Success",
      "content": {}
     }
    }
   }
  },
  "/StructureDefinition/{id}/_history": {
   "get": {
    "tags": [
     "StructureDefinition"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_count",
      "in": "query",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "_since",
      "in": "query",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "type": "array",
         "items": {
          "$ref": "#/components/schemas/StructureDefinition"
         }
        }
       }
      }
     }
    }
   }
  },
  "/StructureDefinition/{id}/_history/{vid}": {
   "get": {
    "tags": [
     "StructureDefinition"
    ],
    "parameters": [
     {
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vid",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "content": {
       "application/fhir+json": {
        "schema": {
         "$ref": "#/components/schemas/StructureDefinition"
        }
       }
      }
     }
    }
   }
  }
 },
 "tags": [
  {
   "name": "StructureDefinition"
  }
 ]
}